&ACCESS RVO1
&REL 803
&COMMENT Rack 1 Place
&PARAM DISKPATH = KRC:\R1\Program\Unterprogramme
DEF  fahrwege_big( )
  ;FOLD INI;%{PE}
  ;FOLD BASISTECH INI
  GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
  INTERRUPT ON 3
  BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
  ;Make your modifications here

  ;ENDFOLD (USER INI)
  ;ENDFOLD (INI)

;***************************************************
; SAK herstellen
PTP $POS_ACT
;***************************************************

;---------------------------------
; Roboter in Grundstellung fahren
;---------------------------------
IF NOT ($IN_HOME OR $IN_HOME1 OR $IN_HOME2 OR $IN_HOME3) THEN
  UP_Rueckzug( )
ENDIF

;***************************************************
;      Unterprogramme fuer Produktionsbetrieb
;***************************************************

;***************************************************
; Satzanwahl auf gewuenschtes Unterprogramm
LOOP
  WAIT SEC 0.1
ENDLOOP
;***************************************************

HALT
UP_Place_R1_L1_S1( )
HALT
UP_Place_R1_L1_S2( )
HALT
UP_Place_R1_L1_S3( )
HALT
UP_Place_R1_L1_S4( )
HALT
UP_Place_R1_L2_S1( )
HALT
UP_Place_R1_L2_S2( )
HALT
UP_Place_R1_L2_S3( )
HALT
UP_Place_R1_L2_S4( )
HALT
UP_Place_R1_L3_S1( )
HALT
UP_Place_R1_L3_S2( )
HALT
UP_Place_R1_L3_S3( )
HALT
UP_Place_R1_L3_S4( )
HALT
UP_Place_R1_L4_S1( )
HALT
UP_Place_R1_L4_S2( )
HALT
UP_Place_R1_L4_S3( )
HALT
UP_Place_R1_L4_S4( )
HALT
UP_Place_R1_L5_S1( )
HALT
UP_Place_R1_L5_S2( )
HALT
UP_Place_R1_L5_S3( )
HALT
UP_Place_R1_L5_S4( )
HALT
UP_Place_R1_L6_S1( )
HALT
UP_Place_R1_L6_S2( )
HALT
UP_Place_R1_L6_S3( )
HALT
UP_Place_R1_L6_S4( )
HALT
UP_Place_R1_L7_S1( )
HALT
UP_Place_R1_L7_S2( )
HALT
UP_Place_R1_L7_S3( )
HALT
UP_Place_R1_L7_S4( )
HALT
UP_Place_R1_L8_S1( )
HALT
UP_Place_R1_L8_S2( )
HALT
UP_Place_R1_L8_S3( )
HALT
UP_Place_R1_L8_S4( )
HALT
UP_Rueckzug_R1Place( )
HALT
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L1_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 1
;    Shelf 1
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_1_A99=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_1_E67",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_1_A99=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_1_E67
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_1_A67=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10003,10002,FPlace_R1_L1_S1_VP1,XPlace_R1_L1_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L1_S1_VP1 CONT Vel=12 % PPlace_R1_L1_S1_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_VP1
FDAT_ACT= FPlace_R1_L1_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10004,10003,FPlace_R1_L1_S1_VP2,XPlace_R1_L1_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L1_S1_VP2 CONT Vel=12 % PPlace_R1_L1_S1_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_VP2
FDAT_ACT= FPlace_R1_L1_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10005,10004,FPlace_R1_L1_S1_VP3,XPlace_R1_L1_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L1_S1_VP3 CONT Vel=12 % PPlace_R1_L1_S1_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_VP3
FDAT_ACT= FPlace_R1_L1_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10006,10005,FPlace_R1_L1_S1_VP4,XPlace_R1_L1_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L1_S1_VP4 CONT Vel=12 % PPlace_R1_L1_S1_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_VP4
FDAT_ACT= FPlace_R1_L1_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S1_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10007,10006,FPlace_R1_L1_S1_VP5,XPlace_R1_L1_S1_VP5) PRIO=-1
;FOLD PTP Place_R1_L1_S1_VP5 CONT Vel=12 % PPlace_R1_L1_S1_VP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S1_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_VP5
FDAT_ACT= FPlace_R1_L1_S1_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S1_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10008,10007,FPlace_R1_L1_S1_VP6,XPlace_R1_L1_S1_VP6) PRIO=-1
;FOLD PTP Place_R1_L1_S1_VP6 CONT Vel=12 % PPlace_R1_L1_S1_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S1_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_VP6
FDAT_ACT= FPlace_R1_L1_S1_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S1_VP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10009,10008,FPlace_R1_L1_S1_Check,XPlace_R1_L1_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L1_S1_Check Vel=12 % PPlace_R1_L1_S1_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_Check, 3:, 5:12, 7:PPlace_R1_L1_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_Check
FDAT_ACT= FPlace_R1_L1_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10010,10009,FPlace_R1_L1_S1_VP7,XPlace_R1_L1_S1_VP7) PRIO=-1
;FOLD LIN Place_R1_L1_S1_VP7 CONT Vel=0.5 m/s LPlace_R1_L1_S1_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S1_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S1_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S1_VP7
FDAT_ACT= FPlace_R1_L1_S1_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S1_VP7 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10011,10010,FPlace_R1_L1_S1_VP8,XPlace_R1_L1_S1_VP8) PRIO=-1
;FOLD LIN Place_R1_L1_S1_VP8 CONT Vel=0.5 m/s LPlace_R1_L1_S1_VP8 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S1_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S1_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S1_VP8
FDAT_ACT= FPlace_R1_L1_S1_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S1_VP8 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10012,10011,FPlace_R1_L1_S1_VP9,XPlace_R1_L1_S1_VP9) PRIO=-1
;FOLD LIN Place_R1_L1_S1_VP9 CONT Vel=0.5 m/s LPlace_R1_L1_S1_VP9 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S1_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S1_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S1_VP9
FDAT_ACT= FPlace_R1_L1_S1_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S1_VP9 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10013,10014,FPlace_R1_L1_S1_AP,XPlace_R1_L1_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L1_S1_AP Vel=0.2 m/s LPlace_R1_L1_S1_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L1_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S1_AP
FDAT_ACT= FPlace_R1_L1_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L1_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10014,10015,FPlace_R1_L1_S1_NP1,XPlace_R1_L1_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L1_S1_NP1 Vel=0.2 m/s LPlace_R1_L1_S1_NP1 Tool[2]:Lower Gripper Base[1]:Rack 1 ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Place_R1_L1_S1_NP1; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LPlace_R1_L1_S1_NP1; Kuka.VelocityPath=0.2; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLPlace_R1_L1_S1_NP1
FDAT_ACT = FPlace_R1_L1_S1_NP1
BAS(#CP_PARAMS, 0.2)
SET_CD_PARAMS (0)
LIN XPlace_R1_L1_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10015,10016,FPlace_R1_L1_S1_NP2,XPlace_R1_L1_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L1_S1_NP2 CONT Vel=0.5 m/s LPlace_R1_L1_S1_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S1_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S1_NP2
FDAT_ACT= FPlace_R1_L1_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S1_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10016,10017,FPlace_R1_L1_S1_NP3,XPlace_R1_L1_S1_NP3) PRIO=-1
;FOLD LIN Place_R1_L1_S1_NP3 Vel=0.5 m/s LPlace_R1_L1_S1_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S1_NP3, 3:, 5:0.5, 7:LPlace_R1_L1_S1_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S1_NP3
FDAT_ACT= FPlace_R1_L1_S1_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S1_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10017,10018,FPlace_R1_L1_S1_NP4,XPlace_R1_L1_S1_NP4) PRIO=-1
;FOLD PTP Place_R1_L1_S1_NP4 CONT Vel=100 % PPlace_R1_L1_S1_NP4 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S1_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_NP4
FDAT_ACT= FPlace_R1_L1_S1_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S1_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10018,10019,FPlace_R1_L1_S1_NP5,XPlace_R1_L1_S1_NP5) PRIO=-1
;FOLD PTP Place_R1_L1_S1_NP5 CONT Vel=100 % PPlace_R1_L1_S1_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S1_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_NP5
FDAT_ACT= FPlace_R1_L1_S1_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S1_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10019,10020,FPlace_R1_L1_S1_NP6,XPlace_R1_L1_S1_NP6) PRIO=-1
;FOLD PTP Place_R1_L1_S1_NP6 CONT Vel=100 % PPlace_R1_L1_S1_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S1_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_NP6
FDAT_ACT= FPlace_R1_L1_S1_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S1_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10020,10021,FPlace_R1_L1_S1_NP7,XPlace_R1_L1_S1_NP7) PRIO=-1
;FOLD PTP Place_R1_L1_S1_NP7 CONT Vel=100 % PPlace_R1_L1_S1_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S1_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_NP7
FDAT_ACT= FPlace_R1_L1_S1_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S1_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10021,10022,FPlace_R1_L1_S1_NP8,XPlace_R1_L1_S1_NP8) PRIO=-1
;FOLD PTP Place_R1_L1_S1_NP8 CONT Vel=100 % PPlace_R1_L1_S1_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S1_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_NP8
FDAT_ACT= FPlace_R1_L1_S1_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S1_NP8 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10022,10023,FPlace_R1_L1_S1_NP9,XPlace_R1_L1_S1_NP9) PRIO=-1
;FOLD PTP Place_R1_L1_S1_NP9 CONT Vel=100 % PPlace_R1_L1_S1_NP9 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S1_NP9, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S1_NP9
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S1_NP9
FDAT_ACT= FPlace_R1_L1_S1_NP9
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S1_NP9 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10023,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 1
RobAusStorage1_1_A67=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L1_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 1
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_1_A99=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_1_E67",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_1_A99=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_1_E67
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_1_A67=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10025,10002,FPlace_R1_L1_S2_VP1,XPlace_R1_L1_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L1_S2_VP1 CONT Vel=12 % PPlace_R1_L1_S2_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_VP1
FDAT_ACT= FPlace_R1_L1_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10026,10025,FPlace_R1_L1_S2_VP2,XPlace_R1_L1_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L1_S2_VP2 CONT Vel=12 % PPlace_R1_L1_S2_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_VP2
FDAT_ACT= FPlace_R1_L1_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10027,10026,FPlace_R1_L1_S2_VP3,XPlace_R1_L1_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L1_S2_VP3 CONT Vel=12 % PPlace_R1_L1_S2_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_VP3
FDAT_ACT= FPlace_R1_L1_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10028,10027,FPlace_R1_L1_S2_VP4,XPlace_R1_L1_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L1_S2_VP4 CONT Vel=12 % PPlace_R1_L1_S2_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_VP4
FDAT_ACT= FPlace_R1_L1_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S2_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10029,10028,FPlace_R1_L1_S2_VP5,XPlace_R1_L1_S2_VP5) PRIO=-1
;FOLD PTP Place_R1_L1_S2_VP5 CONT Vel=12 % PPlace_R1_L1_S2_VP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S2_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_VP5
FDAT_ACT= FPlace_R1_L1_S2_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S2_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10030,10029,FPlace_R1_L1_S2_VP6,XPlace_R1_L1_S2_VP6) PRIO=-1
;FOLD PTP Place_R1_L1_S2_VP6 CONT Vel=12 % PPlace_R1_L1_S2_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S2_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_VP6
FDAT_ACT= FPlace_R1_L1_S2_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S2_VP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10031,10030,FPlace_R1_L1_S2_Check,XPlace_R1_L1_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L1_S2_Check Vel=12 % PPlace_R1_L1_S2_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_Check, 3:, 5:12, 7:PPlace_R1_L1_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_Check
FDAT_ACT= FPlace_R1_L1_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10032,10031,FPlace_R1_L1_S2_VP7,XPlace_R1_L1_S2_VP7) PRIO=-1
;FOLD LIN Place_R1_L1_S2_VP7 CONT Vel=0.5 m/s LPlace_R1_L1_S2_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S2_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S2_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S2_VP7
FDAT_ACT= FPlace_R1_L1_S2_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S2_VP7 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10033,10032,FPlace_R1_L1_S2_VP8,XPlace_R1_L1_S2_VP8) PRIO=-1
;FOLD LIN Place_R1_L1_S2_VP8 CONT Vel=0.5 m/s LPlace_R1_L1_S2_VP8 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S2_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S2_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S2_VP8
FDAT_ACT= FPlace_R1_L1_S2_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S2_VP8 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10034,10035,FPlace_R1_L1_S2_AP,XPlace_R1_L1_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L1_S2_AP Vel=0.2 m/s LPlace_R1_L1_S2_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L1_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S2_AP
FDAT_ACT= FPlace_R1_L1_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L1_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10035,10036,FPlace_R1_L1_S2_NP1,XPlace_R1_L1_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L1_S2_NP1 Vel=0.2 m/s LPlace_R1_L1_S2_NP1 Tool[2]:Lower Gripper Base[1]:Rack 1 ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Place_R1_L1_S2_NP1; Kuka.BlendingEnabled=True; Kuka.MoveDataName=LPlace_R1_L1_S2_NP1; Kuka.VelocityPath=0.2; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLPlace_R1_L1_S2_NP1
FDAT_ACT = FPlace_R1_L1_S2_NP1
BAS(#CP_PARAMS, 0.2)
SET_CD_PARAMS (0)
LIN XPlace_R1_L1_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10036,10037,FPlace_R1_L1_S2_NP2,XPlace_R1_L1_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L1_S2_NP2 CONT Vel=0.5 m/s LPlace_R1_L1_S2_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S2_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S2_NP2
FDAT_ACT= FPlace_R1_L1_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S2_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10037,10038,FPlace_R1_L1_S2_NP3,XPlace_R1_L1_S2_NP3) PRIO=-1
;FOLD LIN Place_R1_L1_S2_NP3 CONT Vel=0.5 m/s LPlace_R1_L1_S2_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S2_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S2_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S2_NP3
FDAT_ACT= FPlace_R1_L1_S2_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S2_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10038,10039,FPlace_R1_L1_S2_NP4,XPlace_R1_L1_S2_NP4) PRIO=-1
;FOLD PTP Place_R1_L1_S2_NP4 CONT Vel=100 % PPlace_R1_L1_S2_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S2_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_NP4
FDAT_ACT= FPlace_R1_L1_S2_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S2_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10039,10040,FPlace_R1_L1_S2_NP5,XPlace_R1_L1_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L1_S2_NP5 CONT Vel=100 % PPlace_R1_L1_S2_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_NP5
FDAT_ACT= FPlace_R1_L1_S2_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S2_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10040,10041,FPlace_R1_L1_S2_NP6,XPlace_R1_L1_S2_NP6) PRIO=-1
;FOLD PTP Place_R1_L1_S2_NP6 CONT Vel=100 % PPlace_R1_L1_S2_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S2_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_NP6
FDAT_ACT= FPlace_R1_L1_S2_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S2_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10041,10042,FPlace_R1_L1_S2_NP7,XPlace_R1_L1_S2_NP7) PRIO=-1
;FOLD PTP Place_R1_L1_S2_NP7 CONT Vel=100 % PPlace_R1_L1_S2_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S2_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_NP7
FDAT_ACT= FPlace_R1_L1_S2_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S2_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10042,10043,FPlace_R1_L1_S2_NP8,XPlace_R1_L1_S2_NP8) PRIO=-1
;FOLD PTP Place_R1_L1_S2_NP8 CONT Vel=100 % PPlace_R1_L1_S2_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S2_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S2_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S2_NP8
FDAT_ACT= FPlace_R1_L1_S2_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S2_NP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10043,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 1
RobAusStorage1_1_A67=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L1_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 1
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_1_A99=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_1_E67",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_1_A99=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_1_E67
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_1_A67=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10045,10002,FPlace_R1_L1_S3_VP1,XPlace_R1_L1_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L1_S3_VP1 CONT Vel=12 % PPlace_R1_L1_S3_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_VP1
FDAT_ACT= FPlace_R1_L1_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10046,10045,FPlace_R1_L1_S3_VP2,XPlace_R1_L1_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L1_S3_VP2 CONT Vel=12 % PPlace_R1_L1_S3_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_VP2
FDAT_ACT= FPlace_R1_L1_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S3_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10047,10046,FPlace_R1_L1_S3_VP3,XPlace_R1_L1_S3_VP3) PRIO=-1
;FOLD PTP Place_R1_L1_S3_VP3 CONT Vel=12 % PPlace_R1_L1_S3_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S3_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_VP3
FDAT_ACT= FPlace_R1_L1_S3_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S3_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10048,10047,FPlace_R1_L1_S3_VP4,XPlace_R1_L1_S3_VP4) PRIO=-1
;FOLD PTP Place_R1_L1_S3_VP4 CONT Vel=12 % PPlace_R1_L1_S3_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S3_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_VP4
FDAT_ACT= FPlace_R1_L1_S3_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S3_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10049,10048,FPlace_R1_L1_S3_VP5,XPlace_R1_L1_S3_VP5) PRIO=-1
;FOLD PTP Place_R1_L1_S3_VP5 CONT Vel=12 % PPlace_R1_L1_S3_VP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S3_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_VP5
FDAT_ACT= FPlace_R1_L1_S3_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S3_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10050,10049,FPlace_R1_L1_S3_VP6,XPlace_R1_L1_S3_VP6) PRIO=-1
;FOLD PTP Place_R1_L1_S3_VP6 CONT Vel=12 % PPlace_R1_L1_S3_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S3_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_VP6
FDAT_ACT= FPlace_R1_L1_S3_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S3_VP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10051,10050,FPlace_R1_L1_S3_Check,XPlace_R1_L1_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L1_S3_Check Vel=12 % PPlace_R1_L1_S3_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_Check, 3:, 5:12, 7:PPlace_R1_L1_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_Check
FDAT_ACT= FPlace_R1_L1_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10052,10051,FPlace_R1_L1_S3_VP7,XPlace_R1_L1_S3_VP7) PRIO=-1
;FOLD LIN Place_R1_L1_S3_VP7 CONT Vel=0.5 m/s LPlace_R1_L1_S3_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S3_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S3_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S3_VP7
FDAT_ACT= FPlace_R1_L1_S3_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S3_VP7 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10053,10052,FPlace_R1_L1_S3_VP8,XPlace_R1_L1_S3_VP8) PRIO=-1
;FOLD LIN Place_R1_L1_S3_VP8 CONT Vel=0.5 m/s LPlace_R1_L1_S3_VP8 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S3_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S3_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S3_VP8
FDAT_ACT= FPlace_R1_L1_S3_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S3_VP8 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10054,10055,FPlace_R1_L1_S3_AP,XPlace_R1_L1_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L1_S3_AP Vel=0.2 m/s LPlace_R1_L1_S3_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L1_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S3_AP
FDAT_ACT= FPlace_R1_L1_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L1_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10055,10056,FPlace_R1_L1_S3_NP1,XPlace_R1_L1_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L1_S3_NP1 Vel=0.2 m/s LPlace_R1_L1_S3_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L1_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S3_NP1
FDAT_ACT= FPlace_R1_L1_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L1_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10056,10057,FPlace_R1_L1_S3_NP2,XPlace_R1_L1_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L1_S3_NP2 CONT Vel=0.5 m/s LPlace_R1_L1_S3_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S3_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S3_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S3_NP2
FDAT_ACT= FPlace_R1_L1_S3_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S3_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10057,10058,FPlace_R1_L1_S3_NP3,XPlace_R1_L1_S3_NP3) PRIO=-1
;FOLD LIN Place_R1_L1_S3_NP3 CONT Vel=0.5 m/s LPlace_R1_L1_S3_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S3_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S3_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S3_NP3
FDAT_ACT= FPlace_R1_L1_S3_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S3_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10058,10059,FPlace_R1_L1_S3_NP4,XPlace_R1_L1_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L1_S3_NP4 CONT Vel=100 % PPlace_R1_L1_S3_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_NP4
FDAT_ACT= FPlace_R1_L1_S3_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S3_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10059,10060,FPlace_R1_L1_S3_NP5,XPlace_R1_L1_S3_NP5) PRIO=-1
;FOLD PTP Place_R1_L1_S3_NP5 CONT Vel=100 % PPlace_R1_L1_S3_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S3_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_NP5
FDAT_ACT= FPlace_R1_L1_S3_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S3_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10060,10061,FPlace_R1_L1_S3_NP6,XPlace_R1_L1_S3_NP6) PRIO=-1
;FOLD PTP Place_R1_L1_S3_NP6 CONT Vel=100 % PPlace_R1_L1_S3_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S3_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_NP6
FDAT_ACT= FPlace_R1_L1_S3_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S3_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10061,10062,FPlace_R1_L1_S3_NP7,XPlace_R1_L1_S3_NP7) PRIO=-1
;FOLD PTP Place_R1_L1_S3_NP7 CONT Vel=100 % PPlace_R1_L1_S3_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S3_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_NP7
FDAT_ACT= FPlace_R1_L1_S3_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S3_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10062,10063,FPlace_R1_L1_S3_NP8,XPlace_R1_L1_S3_NP8) PRIO=-1
;FOLD PTP Place_R1_L1_S3_NP8 CONT Vel=100 % PPlace_R1_L1_S3_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S3_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S3_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S3_NP8
FDAT_ACT= FPlace_R1_L1_S3_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S3_NP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10063,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 1
RobAusStorage1_1_A67=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L1_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 1
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_1_A99=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_1_E67",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_1_A99=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_1_E67
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_1_A67=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10065,10002,FPlace_R1_L1_S4_VP1,XPlace_R1_L1_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L1_S4_VP1 CONT Vel=12 % PPlace_R1_L1_S4_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_VP1
FDAT_ACT= FPlace_R1_L1_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10066,10065,FPlace_R1_L1_S4_VP2,XPlace_R1_L1_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L1_S4_VP2 CONT Vel=12 % PPlace_R1_L1_S4_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_VP2
FDAT_ACT= FPlace_R1_L1_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S4_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10067,10066,FPlace_R1_L1_S4_VP3,XPlace_R1_L1_S4_VP3) PRIO=-1
;FOLD PTP Place_R1_L1_S4_VP3 CONT Vel=12 % PPlace_R1_L1_S4_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S4_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_VP3
FDAT_ACT= FPlace_R1_L1_S4_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S4_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10068,10067,FPlace_R1_L1_S4_VP4,XPlace_R1_L1_S4_VP4) PRIO=-1
;FOLD PTP Place_R1_L1_S4_VP4 CONT Vel=12 % PPlace_R1_L1_S4_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S4_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_VP4
FDAT_ACT= FPlace_R1_L1_S4_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S4_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10069,10068,FPlace_R1_L1_S4_VP5,XPlace_R1_L1_S4_VP5) PRIO=-1
;FOLD PTP Place_R1_L1_S4_VP5 CONT Vel=12 % PPlace_R1_L1_S4_VP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S4_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_VP5
FDAT_ACT= FPlace_R1_L1_S4_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S4_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10070,10069,FPlace_R1_L1_S4_VP6,XPlace_R1_L1_S4_VP6) PRIO=-1
;FOLD PTP Place_R1_L1_S4_VP6 CONT Vel=12 % PPlace_R1_L1_S4_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L1_S4_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_VP6
FDAT_ACT= FPlace_R1_L1_S4_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S4_VP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10071,10070,FPlace_R1_L1_S4_Check,XPlace_R1_L1_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L1_S4_Check Vel=12 % PPlace_R1_L1_S4_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_Check, 3:, 5:12, 7:PPlace_R1_L1_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_Check
FDAT_ACT= FPlace_R1_L1_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L1_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10072,10071,FPlace_R1_L1_S4_VP7,XPlace_R1_L1_S4_VP7) PRIO=-1
;FOLD LIN Place_R1_L1_S4_VP7 CONT Vel=0.5 m/s LPlace_R1_L1_S4_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S4_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S4_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S4_VP7
FDAT_ACT= FPlace_R1_L1_S4_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S4_VP7 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10073,10072,FPlace_R1_L1_S4_VP8,XPlace_R1_L1_S4_VP8) PRIO=-1
;FOLD LIN Place_R1_L1_S4_VP8 CONT Vel=0.5 m/s LPlace_R1_L1_S4_VP8 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S4_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S4_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S4_VP8
FDAT_ACT= FPlace_R1_L1_S4_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S4_VP8 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10074,10075,FPlace_R1_L1_S4_AP,XPlace_R1_L1_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L1_S4_AP Vel=0.2 m/s LPlace_R1_L1_S4_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L1_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S4_AP
FDAT_ACT= FPlace_R1_L1_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L1_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10075,10076,FPlace_R1_L1_S4_NP1,XPlace_R1_L1_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L1_S4_NP1 Vel=0.2 m/s LPlace_R1_L1_S4_NP1 Tool[2]:Lower Gripper Base[1]:Rack 1 ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Place_R1_L1_S4_NP1; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LPlace_R1_L1_S4_NP1; Kuka.VelocityPath=0.2; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLPlace_R1_L1_S4_NP1
FDAT_ACT = FPlace_R1_L1_S4_NP1
BAS(#CP_PARAMS, 0.2)
SET_CD_PARAMS (0)
LIN XPlace_R1_L1_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10076,10077,FPlace_R1_L1_S4_NP2,XPlace_R1_L1_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L1_S4_NP2 CONT Vel=0.5 m/s LPlace_R1_L1_S4_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S4_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S4_NP2
FDAT_ACT= FPlace_R1_L1_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S4_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10077,10078,FPlace_R1_L1_S4_NP3,XPlace_R1_L1_S4_NP3) PRIO=-1
;FOLD LIN Place_R1_L1_S4_NP3 CONT Vel=0.5 m/s LPlace_R1_L1_S4_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L1_S4_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L1_S4_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L1_S4_NP3
FDAT_ACT= FPlace_R1_L1_S4_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L1_S4_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10078,10079,FPlace_R1_L1_S4_NP4,XPlace_R1_L1_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L1_S4_NP4 CONT Vel=100 % PPlace_R1_L1_S4_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_NP4
FDAT_ACT= FPlace_R1_L1_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S4_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10079,10080,FPlace_R1_L1_S4_NP5,XPlace_R1_L1_S4_NP5) PRIO=-1
;FOLD PTP Place_R1_L1_S4_NP5 CONT Vel=100 % PPlace_R1_L1_S4_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S4_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_NP5
FDAT_ACT= FPlace_R1_L1_S4_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S4_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10080,10081,FPlace_R1_L1_S4_NP6,XPlace_R1_L1_S4_NP6) PRIO=-1
;FOLD PTP Place_R1_L1_S4_NP6 CONT Vel=100 % PPlace_R1_L1_S4_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S4_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_NP6
FDAT_ACT= FPlace_R1_L1_S4_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S4_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10081,10082,FPlace_R1_L1_S4_NP7,XPlace_R1_L1_S4_NP7) PRIO=-1
;FOLD PTP Place_R1_L1_S4_NP7 CONT Vel=100 % PPlace_R1_L1_S4_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S4_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_NP7
FDAT_ACT= FPlace_R1_L1_S4_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S4_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10082,10083,FPlace_R1_L1_S4_NP8,XPlace_R1_L1_S4_NP8) PRIO=-1
;FOLD PTP Place_R1_L1_S4_NP8 CONT Vel=100 % PPlace_R1_L1_S4_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L1_S4_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L1_S4_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L1_S4_NP8
FDAT_ACT= FPlace_R1_L1_S4_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L1_S4_NP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10083,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 1
RobAusStorage1_1_A67=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L2_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 2
;    Shelf 1
;  RBG Kollision beachten!
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_2_A100=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_2_E68",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_2_A100=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_2_E68
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_2_A68=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10085,10002,FPlace_R1_L2_S1_VP1,XPlace_R1_L2_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L2_S1_VP1 CONT Vel=12 % PPlace_R1_L2_S1_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_VP1
FDAT_ACT= FPlace_R1_L2_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10086,10085,FPlace_R1_L2_S1_VP2,XPlace_R1_L2_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L2_S1_VP2 CONT Vel=12 % PPlace_R1_L2_S1_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_VP2
FDAT_ACT= FPlace_R1_L2_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10087,10086,FPlace_R1_L2_S1_VP3,XPlace_R1_L2_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L2_S1_VP3 CONT Vel=12 % PPlace_R1_L2_S1_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_VP3
FDAT_ACT= FPlace_R1_L2_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10088,10087,FPlace_R1_L2_S1_VP4,XPlace_R1_L2_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L2_S1_VP4 CONT Vel=12 % PPlace_R1_L2_S1_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_VP4
FDAT_ACT= FPlace_R1_L2_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S1_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10089,10088,FPlace_R1_L2_S1_VP5,XPlace_R1_L2_S1_VP5) PRIO=-1
;FOLD PTP Place_R1_L2_S1_VP5 CONT Vel=12 % PPlace_R1_L2_S1_VP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S1_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_VP5
FDAT_ACT= FPlace_R1_L2_S1_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S1_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10090,10089,FPlace_R1_L2_S1_VP6,XPlace_R1_L2_S1_VP6) PRIO=-1
;FOLD PTP Place_R1_L2_S1_VP6 CONT Vel=12 % PPlace_R1_L2_S1_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S1_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_VP6
FDAT_ACT= FPlace_R1_L2_S1_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S1_VP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10091,10090,FPlace_R1_L2_S1_Check,XPlace_R1_L2_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L2_S1_Check Vel=12 % PPlace_R1_L2_S1_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_Check, 3:, 5:12, 7:PPlace_R1_L2_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_Check
FDAT_ACT= FPlace_R1_L2_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10092,10091,FPlace_R1_L2_S1_VP7,XPlace_R1_L2_S1_VP7) PRIO=-1
;FOLD LIN Place_R1_L2_S1_VP7 CONT Vel=0.5 m/s LPlace_R1_L2_S1_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S1_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_VP7
FDAT_ACT= FPlace_R1_L2_S1_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S1_VP7 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10093,10092,FPlace_R1_L2_S1_VP8,XPlace_R1_L2_S1_VP8) PRIO=-1
;FOLD LIN Place_R1_L2_S1_VP8 CONT Vel=0.5 m/s LPlace_R1_L2_S1_VP8 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S1_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_VP8
FDAT_ACT= FPlace_R1_L2_S1_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S1_VP8 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10094,10093,FPlace_R1_L2_S1_VP9,XPlace_R1_L2_S1_VP9) PRIO=-1
;FOLD LIN Place_R1_L2_S1_VP9 CONT Vel=0.5 m/s LPlace_R1_L2_S1_VP9 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S1_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_VP9
FDAT_ACT= FPlace_R1_L2_S1_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S1_VP9 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10095,10096,FPlace_R1_L2_S1_AP,XPlace_R1_L2_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L2_S1_AP Vel=0.2 m/s LPlace_R1_L2_S1_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L2_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_AP
FDAT_ACT= FPlace_R1_L2_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10096,10097,FPlace_R1_L2_S1_NP1,XPlace_R1_L2_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L2_S1_NP1 Vel=0.2 m/s LPlace_R1_L2_S1_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L2_S1_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_NP1
FDAT_ACT= FPlace_R1_L2_S1_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10097,10098,FPlace_R1_L2_S1_NP2,XPlace_R1_L2_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L2_S1_NP2 CONT Vel=0.5 m/s LPlace_R1_L2_S1_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_NP2
FDAT_ACT= FPlace_R1_L2_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S1_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10098,10099,FPlace_R1_L2_S1_NP3,XPlace_R1_L2_S1_NP3) PRIO=-1
;FOLD LIN Place_R1_L2_S1_NP3 CONT Vel=0.5 m/s LPlace_R1_L2_S1_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S1_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_NP3
FDAT_ACT= FPlace_R1_L2_S1_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S1_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10099,10100,FPlace_R1_L2_S1_NP4,XPlace_R1_L2_S1_NP4) PRIO=-1
;FOLD LIN Place_R1_L2_S1_NP4 Vel=0.5 m/s LPlace_R1_L2_S1_NP4 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S1_NP4, 3:, 5:0.5, 7:LPlace_R1_L2_S1_NP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S1_NP4
FDAT_ACT= FPlace_R1_L2_S1_NP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S1_NP4
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10100,10101,FPlace_R1_L2_S1_NP5,XPlace_R1_L2_S1_NP5) PRIO=-1
;FOLD PTP Place_R1_L2_S1_NP5 CONT Vel=100 % PPlace_R1_L2_S1_NP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S1_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_NP5
FDAT_ACT= FPlace_R1_L2_S1_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S1_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10101,10102,FPlace_R1_L2_S1_NP6,XPlace_R1_L2_S1_NP6) PRIO=-1
;FOLD PTP Place_R1_L2_S1_NP6 CONT Vel=100 % PPlace_R1_L2_S1_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S1_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_NP6
FDAT_ACT= FPlace_R1_L2_S1_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S1_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10102,10103,FPlace_R1_L2_S1_NP7,XPlace_R1_L2_S1_NP7) PRIO=-1
;FOLD PTP Place_R1_L2_S1_NP7 CONT Vel=100 % PPlace_R1_L2_S1_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S1_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_NP7
FDAT_ACT= FPlace_R1_L2_S1_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S1_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10103,10104,FPlace_R1_L2_S1_NP8,XPlace_R1_L2_S1_NP8) PRIO=-1
;FOLD PTP Place_R1_L2_S1_NP8 CONT Vel=100 % PPlace_R1_L2_S1_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S1_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_NP8
FDAT_ACT= FPlace_R1_L2_S1_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S1_NP8 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10104,10105,FPlace_R1_L2_S1_NP9,XPlace_R1_L2_S1_NP9) PRIO=-1
;FOLD PTP Place_R1_L2_S1_NP9 CONT Vel=100 % PPlace_R1_L2_S1_NP9 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S1_NP9, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S1_NP9
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S1_NP9
FDAT_ACT= FPlace_R1_L2_S1_NP9
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S1_NP9 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10105,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 2
RobAusStorage1_2_A68=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L2_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 2
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_2_A100=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_2_E68",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_2_A100=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_2_E68
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_2_A68=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10110,10002,FPlace_R1_L2_S2_VP1,XPlace_R1_L2_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L2_S2_VP1 CONT Vel=12 % PPlace_R1_L2_S2_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_VP1
FDAT_ACT= FPlace_R1_L2_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10111,10110,FPlace_R1_L2_S2_VP2,XPlace_R1_L2_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L2_S2_VP2 CONT Vel=12 % PPlace_R1_L2_S2_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_VP2
FDAT_ACT= FPlace_R1_L2_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10112,10111,FPlace_R1_L2_S2_VP3,XPlace_R1_L2_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L2_S2_VP3 CONT Vel=12 % PPlace_R1_L2_S2_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_VP3
FDAT_ACT= FPlace_R1_L2_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10113,10112,FPlace_R1_L2_S2_VP4,XPlace_R1_L2_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L2_S2_VP4 CONT Vel=12 % PPlace_R1_L2_S2_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_VP4
FDAT_ACT= FPlace_R1_L2_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10114,10113,FPlace_R1_L2_S2_VP5,XPlace_R1_L2_S2_VP5) PRIO=-1
;FOLD PTP Place_R1_L2_S2_VP5 CONT Vel=12 % PPlace_R1_L2_S2_VP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S2_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_VP5
FDAT_ACT= FPlace_R1_L2_S2_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10115,10114,FPlace_R1_L2_S2_VP6,XPlace_R1_L2_S2_VP6) PRIO=-1
;FOLD PTP Place_R1_L2_S2_VP6 CONT Vel=12 % PPlace_R1_L2_S2_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S2_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_VP6
FDAT_ACT= FPlace_R1_L2_S2_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10116,10115,FPlace_R1_L2_S2_VP7,XPlace_R1_L2_S2_VP7) PRIO=-1
;FOLD PTP Place_R1_L2_S2_VP7 CONT Vel=12 % PPlace_R1_L2_S2_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S2_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_VP7
FDAT_ACT= FPlace_R1_L2_S2_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_VP7 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10117,10116,FPlace_R1_L2_S2_Check,XPlace_R1_L2_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L2_S2_Check Vel=12 % PPlace_R1_L2_S2_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_Check, 3:, 5:12, 7:PPlace_R1_L2_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_Check
FDAT_ACT= FPlace_R1_L2_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10118,10117,FPlace_R1_L2_S2_VP8,XPlace_R1_L2_S2_VP8) PRIO=-1
;FOLD LIN Place_R1_L2_S2_VP8 CONT Vel=0.5 m/s LPlace_R1_L2_S2_VP8 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S2_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S2_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S2_VP8
FDAT_ACT= FPlace_R1_L2_S2_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S2_VP8 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10119,10118,FPlace_R1_L2_S2_VP9,XPlace_R1_L2_S2_VP9) PRIO=-1
;FOLD LIN Place_R1_L2_S2_VP9 CONT Vel=0.5 m/s LPlace_R1_L2_S2_VP9 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S2_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S2_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S2_VP9
FDAT_ACT= FPlace_R1_L2_S2_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S2_VP9 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10120,10121,FPlace_R1_L2_S2_AP,XPlace_R1_L2_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L2_S2_AP Vel=0.2 m/s LPlace_R1_L2_S2_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L2_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S2_AP
FDAT_ACT= FPlace_R1_L2_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10121,10122,FPlace_R1_L2_S2_NP1,XPlace_R1_L2_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L2_S2_NP1 Vel=0.2 m/s LPlace_R1_L2_S2_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S2_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L2_S2_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S2_NP1
FDAT_ACT= FPlace_R1_L2_S2_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10122,10123,FPlace_R1_L2_S2_NP2,XPlace_R1_L2_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L2_S2_NP2 CONT Vel=0.5 m/s LPlace_R1_L2_S2_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S2_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S2_NP2
FDAT_ACT= FPlace_R1_L2_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S2_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10123,10124,FPlace_R1_L2_S2_NP3,XPlace_R1_L2_S2_NP3) PRIO=-1
;FOLD LIN Place_R1_L2_S2_NP3 Vel=0.5 m/s LPlace_R1_L2_S2_NP3 Tool[2]:Lower Gripper Base[1]:Rack 1 ;%{PE}
$BWDSTART=FALSE
LDAT_ACT=LLPlace_R1_L2_S2_NP3
FDAT_ACT=FPlace_R1_L2_S2_NP3
BAS(#CP_PARAMS, 0.5)
LIN XPlace_R1_L2_S2_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10124,10125,FPlace_R1_L2_S2_NP4,XPlace_R1_L2_S2_NP4) PRIO=-1
;FOLD PTP Place_R1_L2_S2_NP4 CONT Vel=100 % PPlace_R1_L2_S2_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S2_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_NP4
FDAT_ACT= FPlace_R1_L2_S2_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S2_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10125,10126,FPlace_R1_L2_S2_NP5,XPlace_R1_L2_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L2_S2_NP5 CONT Vel=100 % PPlace_R1_L2_S2_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_NP5
FDAT_ACT= FPlace_R1_L2_S2_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S2_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10126,10127,FPlace_R1_L2_S2_NP6,XPlace_R1_L2_S2_NP6) PRIO=-1
;FOLD PTP Place_R1_L2_S2_NP6 CONT Vel=100 % PPlace_R1_L2_S2_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S2_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_NP6
FDAT_ACT= FPlace_R1_L2_S2_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S2_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10127,10128,FPlace_R1_L2_S2_NP7,XPlace_R1_L2_S2_NP7) PRIO=-1
;FOLD PTP Place_R1_L2_S2_NP7 CONT Vel=100 % PPlace_R1_L2_S2_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S2_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S2_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S2_NP7
FDAT_ACT= FPlace_R1_L2_S2_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S2_NP7 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10128,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 2
RobAusStorage1_2_A68=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L2_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 2
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_2_A100=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_2_E68",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_2_A100=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_2_E68
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_2_A68=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10130,10002,FPlace_R1_L2_S3_VP1,XPlace_R1_L2_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L2_S3_VP1 CONT Vel=12 % PPlace_R1_L2_S3_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_VP1
FDAT_ACT= FPlace_R1_L2_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10131,10130,FPlace_R1_L2_S3_VP2,XPlace_R1_L2_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L2_S3_VP2 CONT Vel=12 % PPlace_R1_L2_S3_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_VP2
FDAT_ACT= FPlace_R1_L2_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S3_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10132,10131,FPlace_R1_L2_S3_VP3,XPlace_R1_L2_S3_VP3) PRIO=-1
;FOLD PTP Place_R1_L2_S3_VP3 CONT Vel=12 % PPlace_R1_L2_S3_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S3_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_VP3
FDAT_ACT= FPlace_R1_L2_S3_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S3_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10133,10132,FPlace_R1_L2_S3_VP4,XPlace_R1_L2_S3_VP4) PRIO=-1
;FOLD PTP Place_R1_L2_S3_VP4 CONT Vel=12 % PPlace_R1_L2_S3_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S3_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_VP4
FDAT_ACT= FPlace_R1_L2_S3_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S3_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10134,10133,FPlace_R1_L2_S3_VP5,XPlace_R1_L2_S3_VP5) PRIO=-1
;FOLD PTP Place_R1_L2_S3_VP5 CONT Vel=12 % PPlace_R1_L2_S3_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S3_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_VP5
FDAT_ACT= FPlace_R1_L2_S3_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S3_VP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10135,10134,FPlace_R1_L2_S3_Check,XPlace_R1_L2_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L2_S3_Check Vel=12 % PPlace_R1_L2_S3_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_Check, 3:, 5:12, 7:PPlace_R1_L2_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_Check
FDAT_ACT= FPlace_R1_L2_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10136,10135,FPlace_R1_L2_S3_VP6,XPlace_R1_L2_S3_VP6) PRIO=-1
;FOLD LIN Place_R1_L2_S3_VP6 CONT Vel=0.5 m/s LPlace_R1_L2_S3_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S3_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S3_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S3_VP6
FDAT_ACT= FPlace_R1_L2_S3_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S3_VP6 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10137,10138,FPlace_R1_L2_S3_AP,XPlace_R1_L2_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L2_S3_AP Vel=0.2 m/s LPlace_R1_L2_S3_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L2_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S3_AP
FDAT_ACT= FPlace_R1_L2_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10138,10139,FPlace_R1_L2_S3_NP1,XPlace_R1_L2_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L2_S3_NP1 Vel=0.2 m/s LPlace_R1_L2_S3_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L2_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S3_NP1
FDAT_ACT= FPlace_R1_L2_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10139,10140,FPlace_R1_L2_S3_NP2,XPlace_R1_L2_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L2_S3_NP2 CONT Vel=0.5 m/s LPlace_R1_L2_S3_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S3_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S3_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S3_NP2
FDAT_ACT= FPlace_R1_L2_S3_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S3_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10140,10141,FPlace_R1_L2_S3_NP3,XPlace_R1_L2_S3_NP3) PRIO=-1
;FOLD LIN Place_R1_L2_S3_NP3 CONT Vel=0.5 m/s LPlace_R1_L2_S3_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S3_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S3_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S3_NP3
FDAT_ACT= FPlace_R1_L2_S3_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S3_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10141,10142,FPlace_R1_L2_S3_NP4,XPlace_R1_L2_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L2_S3_NP4 CONT Vel=100 % PPlace_R1_L2_S3_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_NP4
FDAT_ACT= FPlace_R1_L2_S3_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S3_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10142,10143,FPlace_R1_L2_S3_NP5,XPlace_R1_L2_S3_NP5) PRIO=-1
;FOLD PTP Place_R1_L2_S3_NP5 CONT Vel=100 % PPlace_R1_L2_S3_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S3_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_NP5
FDAT_ACT= FPlace_R1_L2_S3_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S3_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10143,10144,FPlace_R1_L2_S3_NP6,XPlace_R1_L2_S3_NP6) PRIO=-1
;FOLD PTP Place_R1_L2_S3_NP6 CONT Vel=100 % PPlace_R1_L2_S3_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S3_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_NP6
FDAT_ACT= FPlace_R1_L2_S3_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S3_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10144,10145,FPlace_R1_L2_S3_NP7,XPlace_R1_L2_S3_NP7) PRIO=-1
;FOLD PTP Place_R1_L2_S3_NP7 CONT Vel=100 % PPlace_R1_L2_S3_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S3_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S3_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S3_NP7
FDAT_ACT= FPlace_R1_L2_S3_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S3_NP7 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10145,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 2
RobAusStorage1_2_A68=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L2_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 2
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_2_A100=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_2_E68",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_2_A100=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_2_E68
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_2_A68=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10150,10002,FPlace_R1_L2_S4_VP1,XPlace_R1_L2_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L2_S4_VP1 CONT Vel=12 % PPlace_R1_L2_S4_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_VP1
FDAT_ACT= FPlace_R1_L2_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10151,10150,FPlace_R1_L2_S4_VP2,XPlace_R1_L2_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L2_S4_VP2 CONT Vel=12 % PPlace_R1_L2_S4_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_VP2
FDAT_ACT= FPlace_R1_L2_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S4_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10152,10151,FPlace_R1_L2_S4_VP3,XPlace_R1_L2_S4_VP3) PRIO=-1
;FOLD PTP Place_R1_L2_S4_VP3 CONT Vel=12 % PPlace_R1_L2_S4_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S4_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_VP3
FDAT_ACT= FPlace_R1_L2_S4_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S4_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10153,10152,FPlace_R1_L2_S4_VP4,XPlace_R1_L2_S4_VP4) PRIO=-1
;FOLD PTP Place_R1_L2_S4_VP4 CONT Vel=12 % PPlace_R1_L2_S4_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S4_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_VP4
FDAT_ACT= FPlace_R1_L2_S4_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S4_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10154,10153,FPlace_R1_L2_S4_VP5,XPlace_R1_L2_S4_VP5) PRIO=-1
;FOLD PTP Place_R1_L2_S4_VP5 CONT Vel=12 % PPlace_R1_L2_S4_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L2_S4_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_VP5
FDAT_ACT= FPlace_R1_L2_S4_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S4_VP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10155,10154,FPlace_R1_L2_S4_Check,XPlace_R1_L2_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L2_S4_Check Vel=12 % PPlace_R1_L2_S4_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_Check, 3:, 5:12, 7:PPlace_R1_L2_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_Check
FDAT_ACT= FPlace_R1_L2_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L2_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10156,10155,FPlace_R1_L2_S4_VP6,XPlace_R1_L2_S4_VP6) PRIO=-1
;FOLD LIN Place_R1_L2_S4_VP6 CONT Vel=0.5 m/s LPlace_R1_L2_S4_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S4_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S4_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S4_VP6
FDAT_ACT= FPlace_R1_L2_S4_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S4_VP6 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10157,10156,FPlace_R1_L2_S4_VP7,XPlace_R1_L2_S4_VP7) PRIO=-1
;FOLD LIN Place_R1_L2_S4_VP7 CONT Vel=0.5 m/s LPlace_R1_L2_S4_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S4_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S4_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S4_VP7
FDAT_ACT= FPlace_R1_L2_S4_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S4_VP7 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10158,10159,FPlace_R1_L2_S4_AP,XPlace_R1_L2_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L2_S4_AP Vel=0.2 m/s LPlace_R1_L2_S4_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L2_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S4_AP
FDAT_ACT= FPlace_R1_L2_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10159,10160,FPlace_R1_L2_S4_NP1,XPlace_R1_L2_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L2_S4_NP1 Vel=0.2 m/s LPlace_R1_L2_S4_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S4_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L2_S4_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S4_NP1
FDAT_ACT= FPlace_R1_L2_S4_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L2_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10160,10161,FPlace_R1_L2_S4_NP2,XPlace_R1_L2_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L2_S4_NP2 CONT Vel=0.5 m/s LPlace_R1_L2_S4_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L2_S4_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L2_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S4_NP2
FDAT_ACT= FPlace_R1_L2_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S4_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10161,10162,FPlace_R1_L2_S4_NP3,XPlace_R1_L2_S4_NP3) PRIO=-1
;FOLD LIN Place_R1_L2_S4_NP3 Vel=0.5 m/s LPlace_R1_L2_S4_NP3 Tool[2]:Lower Gripper Base[1]:Rack 1 ;%{PE}
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L2_S4_NP3
FDAT_ACT= FPlace_R1_L2_S4_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L2_S4_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10162,10163,FPlace_R1_L2_S4_NP4,XPlace_R1_L2_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L2_S4_NP4 CONT Vel=100 % PPlace_R1_L2_S4_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_NP4
FDAT_ACT= FPlace_R1_L2_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S4_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10163,10164,FPlace_R1_L2_S4_NP5,XPlace_R1_L2_S4_NP5) PRIO=-1
;FOLD PTP Place_R1_L2_S4_NP5 CONT Vel=100 % PPlace_R1_L2_S4_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S4_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_NP5
FDAT_ACT= FPlace_R1_L2_S4_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S4_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10164,10165,FPlace_R1_L2_S4_NP6,XPlace_R1_L2_S4_NP6) PRIO=-1
;FOLD PTP Place_R1_L2_S4_NP6 CONT Vel=100 % PPlace_R1_L2_S4_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S4_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_NP6
FDAT_ACT= FPlace_R1_L2_S4_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S4_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10165,10166,FPlace_R1_L2_S4_NP7,XPlace_R1_L2_S4_NP7) PRIO=-1
;FOLD PTP Place_R1_L2_S4_NP7 CONT Vel=100 % PPlace_R1_L2_S4_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S4_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_NP7
FDAT_ACT= FPlace_R1_L2_S4_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S4_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10166,10167,FPlace_R1_L2_S4_NP8,XPlace_R1_L2_S4_NP8) PRIO=-1
;FOLD PTP Place_R1_L2_S4_NP8 CONT Vel=100 % PPlace_R1_L2_S4_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L2_S4_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L2_S4_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L2_S4_NP8
FDAT_ACT= FPlace_R1_L2_S4_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L2_S4_NP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10167,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 2
RobAusStorage1_2_A68=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L3_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 3
;    Shelf 1
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_3_A101=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_3_E69",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_3_A101=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_3_E69
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_3_A69=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10170,10002,FPlace_R1_L3_S1_VP1,XPlace_R1_L3_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L3_S1_VP1 CONT Vel=12 % PPlace_R1_L3_S1_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_VP1
FDAT_ACT= FPlace_R1_L3_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10171,10170,FPlace_R1_L3_S1_VP2,XPlace_R1_L3_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L3_S1_VP2 CONT Vel=12 % PPlace_R1_L3_S1_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_VP2
FDAT_ACT= FPlace_R1_L3_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10172,10171,FPlace_R1_L3_S1_VP3,XPlace_R1_L3_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L3_S1_VP3 CONT Vel=12 % PPlace_R1_L3_S1_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_VP3
FDAT_ACT= FPlace_R1_L3_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10173,10172,FPlace_R1_L3_S1_VP4,XPlace_R1_L3_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L3_S1_VP4 CONT Vel=12 % PPlace_R1_L3_S1_VP4 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_VP4
FDAT_ACT= FPlace_R1_L3_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S1_VP4 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10174,10173,FPlace_R1_L3_S1_Check,XPlace_R1_L3_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L3_S1_Check Vel=12 % PPlace_R1_L3_S1_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_Check, 3:, 5:12, 7:PPlace_R1_L3_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_Check
FDAT_ACT= FPlace_R1_L3_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10175,10174,FPlace_R1_L3_S1_VP5,XPlace_R1_L3_S1_VP5) PRIO=-1
;FOLD LIN Place_R1_L3_S1_VP5 CONT Vel=0.5 m/s LPlace_R1_L3_S1_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S1_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_VP5
FDAT_ACT= FPlace_R1_L3_S1_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S1_VP5 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10176,10175,FPlace_R1_L3_S1_VP6,XPlace_R1_L3_S1_VP6) PRIO=-1
;FOLD LIN Place_R1_L3_S1_VP6 CONT Vel=0.5 m/s LPlace_R1_L3_S1_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S1_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_VP6
FDAT_ACT= FPlace_R1_L3_S1_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S1_VP6 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10177,10176,FPlace_R1_L3_S1_VP7,XPlace_R1_L3_S1_VP7) PRIO=-1
;FOLD LIN Place_R1_L3_S1_VP7 CONT Vel=0.5 m/s LPlace_R1_L3_S1_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S1_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_VP7
FDAT_ACT= FPlace_R1_L3_S1_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S1_VP7 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10178,10179,FPlace_R1_L3_S1_AP,XPlace_R1_L3_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L3_S1_AP Vel=0.2 m/s LPlace_R1_L3_S1_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L3_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_AP
FDAT_ACT= FPlace_R1_L3_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10179,10180,FPlace_R1_L3_S1_NP1,XPlace_R1_L3_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L3_S1_NP1 Vel=0.2 m/s LPlace_R1_L3_S1_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L3_S1_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_NP1
FDAT_ACT= FPlace_R1_L3_S1_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10180,10181,FPlace_R1_L3_S1_NP2,XPlace_R1_L3_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L3_S1_NP2 CONT Vel=0.5 m/s LPlace_R1_L3_S1_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_NP2
FDAT_ACT= FPlace_R1_L3_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S1_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10181,10182,FPlace_R1_L3_S1_NP3,XPlace_R1_L3_S1_NP3) PRIO=-1
;FOLD LIN Place_R1_L3_S1_NP3 CONT Vel=0.5 m/s LPlace_R1_L3_S1_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S1_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_NP3
FDAT_ACT= FPlace_R1_L3_S1_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S1_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10182,10183,FPlace_R1_L3_S1_NP4,XPlace_R1_L3_S1_NP4) PRIO=-1
;FOLD LIN Place_R1_L3_S1_NP4 CONT Vel=0.5 m/s LPlace_R1_L3_S1_NP4 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S1_NP4, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S1_NP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S1_NP4
FDAT_ACT= FPlace_R1_L3_S1_NP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S1_NP4 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10183,10184,FPlace_R1_L3_S1_NP5,XPlace_R1_L3_S1_NP5) PRIO=-1
;FOLD PTP Place_R1_L3_S1_NP5 CONT Vel=100 % PPlace_R1_L3_S1_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S1_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_NP5
FDAT_ACT= FPlace_R1_L3_S1_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S1_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10184,10185,FPlace_R1_L3_S1_NP6,XPlace_R1_L3_S1_NP6) PRIO=-1
;FOLD PTP Place_R1_L3_S1_NP6 CONT Vel=100 % PPlace_R1_L3_S1_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S1_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_NP6
FDAT_ACT= FPlace_R1_L3_S1_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S1_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10185,10186,FPlace_R1_L3_S1_NP7,XPlace_R1_L3_S1_NP7) PRIO=-1
;FOLD PTP Place_R1_L3_S1_NP7 CONT Vel=100 % PPlace_R1_L3_S1_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S1_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_NP7
FDAT_ACT= FPlace_R1_L3_S1_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S1_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10186,10187,FPlace_R1_L3_S1_NP8,XPlace_R1_L3_S1_NP8) PRIO=-1
;FOLD PTP Place_R1_L3_S1_NP8 CONT Vel=100 % PPlace_R1_L3_S1_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S1_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_NP8
FDAT_ACT= FPlace_R1_L3_S1_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S1_NP8 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10187,10188,FPlace_R1_L3_S1_NP9,XPlace_R1_L3_S1_NP9) PRIO=-1
;FOLD PTP Place_R1_L3_S1_NP9 CONT Vel=100 % PPlace_R1_L3_S1_NP9 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S1_NP9, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S1_NP9
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S1_NP9
FDAT_ACT= FPlace_R1_L3_S1_NP9
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S1_NP9 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10188,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 3
RobAusStorage1_3_A69=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L3_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 3
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_3_A101=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_3_E69",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_3_A101=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_3_E69
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_3_A69=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10190,10002,FPlace_R1_L3_S2_VP1,XPlace_R1_L3_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L3_S2_VP1 CONT Vel=12 % PPlace_R1_L3_S2_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_VP1
FDAT_ACT= FPlace_R1_L3_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10191,10190,FPlace_R1_L3_S2_VP2,XPlace_R1_L3_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L3_S2_VP2 CONT Vel=12 % PPlace_R1_L3_S2_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_VP2
FDAT_ACT= FPlace_R1_L3_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10192,10191,FPlace_R1_L3_S2_VP3,XPlace_R1_L3_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L3_S2_VP3 CONT Vel=12 % PPlace_R1_L3_S2_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_VP3
FDAT_ACT= FPlace_R1_L3_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10193,10192,FPlace_R1_L3_S2_VP4,XPlace_R1_L3_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L3_S2_VP4 CONT Vel=12 % PPlace_R1_L3_S2_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_VP4
FDAT_ACT= FPlace_R1_L3_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S2_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10194,10193,FPlace_R1_L3_S2_VP5,XPlace_R1_L3_S2_VP5) PRIO=-1
;FOLD PTP Place_R1_L3_S2_VP5 CONT Vel=12 % PPlace_R1_L3_S2_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S2_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_VP5
FDAT_ACT= FPlace_R1_L3_S2_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S2_VP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10195,10194,FPlace_R1_L3_S2_Check,XPlace_R1_L3_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L3_S2_Check Vel=12 % PPlace_R1_L3_S2_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_Check, 3:, 5:12, 7:PPlace_R1_L3_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_Check
FDAT_ACT= FPlace_R1_L3_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10196,10195,FPlace_R1_L3_S2_VP6,XPlace_R1_L3_S2_VP6) PRIO=-1
;FOLD LIN Place_R1_L3_S2_VP6 CONT Vel=0.5 m/s LPlace_R1_L3_S2_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S2_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S2_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S2_VP6
FDAT_ACT= FPlace_R1_L3_S2_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S2_VP6 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10197,10198,FPlace_R1_L3_S2_AP,XPlace_R1_L3_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L3_S2_AP Vel=0.2 m/s LPlace_R1_L3_S2_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L3_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S2_AP
FDAT_ACT= FPlace_R1_L3_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10198,10199,FPlace_R1_L3_S2_NP1,XPlace_R1_L3_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L3_S2_NP1 Vel=0.2 m/s LPlace_R1_L3_S2_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S2_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L3_S2_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S2_NP1
FDAT_ACT= FPlace_R1_L3_S2_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10199,10200,FPlace_R1_L3_S2_NP2,XPlace_R1_L3_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L3_S2_NP2 CONT Vel=0.5 m/s LPlace_R1_L3_S2_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S2_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S2_NP2
FDAT_ACT= FPlace_R1_L3_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S2_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10200,10201,FPlace_R1_L3_S2_NP3,XPlace_R1_L3_S2_NP3) PRIO=-1
;FOLD PTP Place_R1_L3_S2_NP3 CONT Vel=100 % PPlace_R1_L3_S2_NP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S2_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_NP3
FDAT_ACT= FPlace_R1_L3_S2_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S2_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10201,10202,FPlace_R1_L3_S2_NP4,XPlace_R1_L3_S2_NP4) PRIO=-1
;FOLD PTP Place_R1_L3_S2_NP4 CONT Vel=100 % PPlace_R1_L3_S2_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S2_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_NP4
FDAT_ACT= FPlace_R1_L3_S2_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S2_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10202,10203,FPlace_R1_L3_S2_NP5,XPlace_R1_L3_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L3_S2_NP5 CONT Vel=100 % PPlace_R1_L3_S2_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_NP5
FDAT_ACT= FPlace_R1_L3_S2_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S2_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10203,10204,FPlace_R1_L3_S2_NP6,XPlace_R1_L3_S2_NP6) PRIO=-1
;FOLD PTP Place_R1_L3_S2_NP6 CONT Vel=100 % PPlace_R1_L3_S2_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S2_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S2_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S2_NP6
FDAT_ACT= FPlace_R1_L3_S2_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S2_NP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10204,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 3
RobAusStorage1_3_A69=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L3_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 3
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_3_A101=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_3_E69",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_3_A101=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_3_E69
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_3_A69=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10210,10002,FPlace_R1_L3_S3_VP1,XPlace_R1_L3_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L3_S3_VP1 CONT Vel=12 % PPlace_R1_L3_S3_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_VP1
FDAT_ACT= FPlace_R1_L3_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10211,10210,FPlace_R1_L3_S3_VP2,XPlace_R1_L3_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L3_S3_VP2 CONT Vel=12 % PPlace_R1_L3_S3_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_VP2
FDAT_ACT= FPlace_R1_L3_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S3_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10212,10211,FPlace_R1_L3_S3_VP3,XPlace_R1_L3_S3_VP3) PRIO=-1
;FOLD PTP Place_R1_L3_S3_VP3 CONT Vel=12 % PPlace_R1_L3_S3_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S3_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_VP3
FDAT_ACT= FPlace_R1_L3_S3_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S3_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10213,10212,FPlace_R1_L3_S3_VP4,XPlace_R1_L3_S3_VP4) PRIO=-1
;FOLD PTP Place_R1_L3_S3_VP4 CONT Vel=12 % PPlace_R1_L3_S3_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S3_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_VP4
FDAT_ACT= FPlace_R1_L3_S3_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S3_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10214,10213,FPlace_R1_L3_S3_VP5,XPlace_R1_L3_S3_VP5) PRIO=-1
;FOLD PTP Place_R1_L3_S3_VP5 CONT Vel=12 % PPlace_R1_L3_S3_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S3_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_VP5
FDAT_ACT= FPlace_R1_L3_S3_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S3_VP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10215,10214,FPlace_R1_L3_S3_Check,XPlace_R1_L3_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L3_S3_Check Vel=12 % PPlace_R1_L3_S3_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_Check, 3:, 5:12, 7:PPlace_R1_L3_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_Check
FDAT_ACT= FPlace_R1_L3_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10216,10215,FPlace_R1_L3_S3_VP6,XPlace_R1_L3_S3_VP6) PRIO=-1
;FOLD LIN Place_R1_L3_S3_VP6 CONT Vel=0.5 m/s LPlace_R1_L3_S3_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S3_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S3_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S3_VP6
FDAT_ACT= FPlace_R1_L3_S3_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S3_VP6 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10217,10216,FPlace_R1_L3_S3_VP7,XPlace_R1_L3_S3_VP7) PRIO=-1
;FOLD LIN Place_R1_L3_S3_VP7 CONT Vel=0.5 m/s LPlace_R1_L3_S3_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S3_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S3_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S3_VP7
FDAT_ACT= FPlace_R1_L3_S3_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S3_VP7 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10218,10219,FPlace_R1_L3_S3_AP,XPlace_R1_L3_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L3_S3_AP Vel=0.2 m/s LPlace_R1_L3_S3_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L3_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S3_AP
FDAT_ACT= FPlace_R1_L3_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10219,10220,FPlace_R1_L3_S3_NP1,XPlace_R1_L3_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L3_S3_NP1 Vel=0.2 m/s LPlace_R1_L3_S3_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L3_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S3_NP1
FDAT_ACT= FPlace_R1_L3_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10220,10221,FPlace_R1_L3_S3_NP2,XPlace_R1_L3_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L3_S3_NP2 Vel=0.5 m/s LPlace_R1_L3_S3_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S3_NP2, 3:, 5:0.5, 7:LPlace_R1_L3_S3_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S3_NP2
FDAT_ACT= FPlace_R1_L3_S3_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S3_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10221,10222,FPlace_R1_L3_S3_NP3,XPlace_R1_L3_S3_NP3) PRIO=-1
;FOLD PTP Place_R1_L3_S3_NP3 CONT Vel=100 % PPlace_R1_L3_S3_NP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S3_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_NP3
FDAT_ACT= FPlace_R1_L3_S3_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S3_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10222,10223,FPlace_R1_L3_S3_NP4,XPlace_R1_L3_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L3_S3_NP4 CONT Vel=100 % PPlace_R1_L3_S3_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_NP4
FDAT_ACT= FPlace_R1_L3_S3_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S3_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10223,10224,FPlace_R1_L3_S3_NP5,XPlace_R1_L3_S3_NP5) PRIO=-1
;FOLD PTP Place_R1_L3_S3_NP5 CONT Vel=100 % PPlace_R1_L3_S3_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S3_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_NP5
FDAT_ACT= FPlace_R1_L3_S3_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S3_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10224,10225,FPlace_R1_L3_S3_NP6,XPlace_R1_L3_S3_NP6) PRIO=-1
;FOLD PTP Place_R1_L3_S3_NP6 CONT Vel=100 % PPlace_R1_L3_S3_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S3_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_NP6
FDAT_ACT= FPlace_R1_L3_S3_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S3_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10225,10226,FPlace_R1_L3_S3_NP7,XPlace_R1_L3_S3_NP7) PRIO=-1
;FOLD PTP Place_R1_L3_S3_NP7 CONT Vel=100 % PPlace_R1_L3_S3_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S3_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S3_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S3_NP7
FDAT_ACT= FPlace_R1_L3_S3_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S3_NP7 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10226,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 3
RobAusStorage1_3_A69=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L3_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 3
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_3_A101=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_3_E69",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_3_A101=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_3_E69
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_3_A69=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10230,10002,FPlace_R1_L3_S4_VP1,XPlace_R1_L3_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L3_S4_VP1 CONT Vel=12 % PPlace_R1_L3_S4_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_VP1
FDAT_ACT= FPlace_R1_L3_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10231,10230,FPlace_R1_L3_S4_VP2,XPlace_R1_L3_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L3_S4_VP2 CONT Vel=12 % PPlace_R1_L3_S4_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_VP2
FDAT_ACT= FPlace_R1_L3_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S4_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10232,10231,FPlace_R1_L3_S4_VP3,XPlace_R1_L3_S4_VP3) PRIO=-1
;FOLD PTP Place_R1_L3_S4_VP3 CONT Vel=12 % PPlace_R1_L3_S4_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S4_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_VP3
FDAT_ACT= FPlace_R1_L3_S4_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S4_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10233,10232,FPlace_R1_L3_S4_VP4,XPlace_R1_L3_S4_VP4) PRIO=-1
;FOLD PTP Place_R1_L3_S4_VP4 CONT Vel=12 % PPlace_R1_L3_S4_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S4_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_VP4
FDAT_ACT= FPlace_R1_L3_S4_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S4_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10234,10233,FPlace_R1_L3_S4_VP5,XPlace_R1_L3_S4_VP5) PRIO=-1
;FOLD PTP Place_R1_L3_S4_VP5 CONT Vel=12 % PPlace_R1_L3_S4_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L3_S4_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_VP5
FDAT_ACT= FPlace_R1_L3_S4_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S4_VP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10235,10234,FPlace_R1_L3_S4_Check,XPlace_R1_L3_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L3_S4_Check Vel=12 % PPlace_R1_L3_S4_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_Check, 3:, 5:12, 7:PPlace_R1_L3_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_Check
FDAT_ACT= FPlace_R1_L3_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L3_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10236,10235,FPlace_R1_L3_S4_VP6,XPlace_R1_L3_S4_VP6) PRIO=-1
;FOLD LIN Place_R1_L3_S4_VP6 CONT Vel=0.5 m/s LPlace_R1_L3_S4_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S4_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S4_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S4_VP6
FDAT_ACT= FPlace_R1_L3_S4_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S4_VP6 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10237,10236,FPlace_R1_L3_S4_VP7,XPlace_R1_L3_S4_VP7) PRIO=-1
;FOLD LIN Place_R1_L3_S4_VP7 CONT Vel=0.5 m/s LPlace_R1_L3_S4_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S4_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S4_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S4_VP7
FDAT_ACT= FPlace_R1_L3_S4_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S4_VP7 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10238,10239,FPlace_R1_L3_S4_AP,XPlace_R1_L3_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L3_S4_AP Vel=0.2 m/s LPlace_R1_L3_S4_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L3_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S4_AP
FDAT_ACT= FPlace_R1_L3_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10239,10240,FPlace_R1_L3_S4_NP1,XPlace_R1_L3_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L3_S4_NP1 Vel=0.2 m/s LPlace_R1_L3_S4_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S4_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L3_S4_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S4_NP1
FDAT_ACT= FPlace_R1_L3_S4_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L3_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10240,10241,FPlace_R1_L3_S4_NP2,XPlace_R1_L3_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L3_S4_NP2 CONT Vel=0.5 m/s LPlace_R1_L3_S4_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S4_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S4_NP2
FDAT_ACT= FPlace_R1_L3_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S4_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10241,10242,FPlace_R1_L3_S4_NP3,XPlace_R1_L3_S4_NP3) PRIO=-1
;FOLD LIN Place_R1_L3_S4_NP3 CONT Vel=0.5 m/s LPlace_R1_L3_S4_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L3_S4_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L3_S4_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L3_S4_NP3
FDAT_ACT= FPlace_R1_L3_S4_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L3_S4_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10242,10243,FPlace_R1_L3_S4_NP4,XPlace_R1_L3_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L3_S4_NP4 CONT Vel=100 % PPlace_R1_L3_S4_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_NP4
FDAT_ACT= FPlace_R1_L3_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S4_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10243,10244,FPlace_R1_L3_S4_NP5,XPlace_R1_L3_S4_NP5) PRIO=-1
;FOLD PTP Place_R1_L3_S4_NP5 CONT Vel=100 % PPlace_R1_L3_S4_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S4_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_NP5
FDAT_ACT= FPlace_R1_L3_S4_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S4_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10244,10245,FPlace_R1_L3_S4_NP6,XPlace_R1_L3_S4_NP6) PRIO=-1
;FOLD PTP Place_R1_L3_S4_NP6 CONT Vel=100 % PPlace_R1_L3_S4_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S4_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_NP6
FDAT_ACT= FPlace_R1_L3_S4_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S4_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10245,10246,FPlace_R1_L3_S4_NP7,XPlace_R1_L3_S4_NP7) PRIO=-1
;FOLD PTP Place_R1_L3_S4_NP7 CONT Vel=100 % PPlace_R1_L3_S4_NP7 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S4_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_NP7
FDAT_ACT= FPlace_R1_L3_S4_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S4_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10246,10247,FPlace_R1_L3_S4_NP8,XPlace_R1_L3_S4_NP8) PRIO=-1
;FOLD PTP Place_R1_L3_S4_NP8 CONT Vel=100 % PPlace_R1_L3_S4_NP8 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L3_S4_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L3_S4_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L3_S4_NP8
FDAT_ACT= FPlace_R1_L3_S4_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L3_S4_NP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10247,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 3
RobAusStorage1_3_A69=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L4_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 4
;    Shelf 1
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_4_A102=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_4_E70",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_4_A102=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_4_E70
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_4_A70=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10250,10002,FPlace_R1_L4_S1_VP1,XPlace_R1_L4_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP1 CONT Vel=12 % PPlace_R1_L4_S1_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP1
FDAT_ACT= FPlace_R1_L4_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10251,10250,FPlace_R1_L4_S1_VP2,XPlace_R1_L4_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP2 CONT Vel=12 % PPlace_R1_L4_S1_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP2
FDAT_ACT= FPlace_R1_L4_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10252,10251,FPlace_R1_L4_S1_VP3,XPlace_R1_L4_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP3 CONT Vel=12 % PPlace_R1_L4_S1_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP3
FDAT_ACT= FPlace_R1_L4_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10253,10252,FPlace_R1_L4_S1_VP4,XPlace_R1_L4_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP4 CONT Vel=12 % PPlace_R1_L4_S1_VP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP4
FDAT_ACT= FPlace_R1_L4_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10254,10253,FPlace_R1_L4_S1_VP5,XPlace_R1_L4_S1_VP5) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP5 CONT Vel=12 % PPlace_R1_L4_S1_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP5
FDAT_ACT= FPlace_R1_L4_S1_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10255,10254,FPlace_R1_L4_S1_VP6,XPlace_R1_L4_S1_VP6) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP6 CONT Vel=12 % PPlace_R1_L4_S1_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP6
FDAT_ACT= FPlace_R1_L4_S1_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10256,10255,FPlace_R1_L4_S1_VP7,XPlace_R1_L4_S1_VP7) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP7 CONT Vel=12 % PPlace_R1_L4_S1_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP7
FDAT_ACT= FPlace_R1_L4_S1_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10257,10256,FPlace_R1_L4_S1_VP8,XPlace_R1_L4_S1_VP8) PRIO=-1
;FOLD PTP Place_R1_L4_S1_VP8 CONT Vel=12 % PPlace_R1_L4_S1_VP8 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S1_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_VP8
FDAT_ACT= FPlace_R1_L4_S1_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_VP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10258,10257,FPlace_R1_L4_S1_Check,XPlace_R1_L4_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L4_S1_Check Vel=12 % PPlace_R1_L4_S1_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_Check, 3:, 5:12, 7:PPlace_R1_L4_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_Check
FDAT_ACT= FPlace_R1_L4_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10259,10258,FPlace_R1_L4_S1_VP9,XPlace_R1_L4_S1_VP9) PRIO=-1
;FOLD LIN Place_R1_L4_S1_VP9 CONT Vel=0.5 m/s LPlace_R1_L4_S1_VP9 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S1_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S1_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S1_VP9
FDAT_ACT= FPlace_R1_L4_S1_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S1_VP9 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10260,10259,FPlace_R1_L4_S1_VP10,XPlace_R1_L4_S1_VP10) PRIO=-1
;FOLD LIN Place_R1_L4_S1_VP10 CONT Vel=0.5 m/s LPlace_R1_L4_S1_VP10 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S1_VP10, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S1_VP10
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S1_VP10
FDAT_ACT= FPlace_R1_L4_S1_VP10
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S1_VP10 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10261,10262,FPlace_R1_L4_S1_AP,XPlace_R1_L4_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L4_S1_AP Vel=0.2 m/s LPlace_R1_L4_S1_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L4_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S1_AP
FDAT_ACT= FPlace_R1_L4_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10262,10263,FPlace_R1_L4_S1_NP1,XPlace_R1_L4_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L4_S1_NP1 Vel=0.2 m/s LPlace_R1_L4_S1_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S1_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L4_S1_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S1_NP1
FDAT_ACT= FPlace_R1_L4_S1_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10263,10264,FPlace_R1_L4_S1_NP2,XPlace_R1_L4_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L4_S1_NP2 CONT Vel=0.5 m/s LPlace_R1_L4_S1_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S1_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S1_NP2
FDAT_ACT= FPlace_R1_L4_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S1_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10264,10265,FPlace_R1_L4_S1_NP3,XPlace_R1_L4_S1_NP3) PRIO=-1
;FOLD LIN Place_R1_L4_S1_NP3 Vel=0.5 m/s LPlace_R1_L4_S1_NP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S1_NP3, 3:, 5:0.5, 7:LPlace_R1_L4_S1_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S1_NP3
FDAT_ACT= FPlace_R1_L4_S1_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S1_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10265,10266,FPlace_R1_L4_S1_NP4,XPlace_R1_L4_S1_NP4) PRIO=-1
;FOLD PTP Place_R1_L4_S1_NP4 CONT Vel=100 % PPlace_R1_L4_S1_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S1_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_NP4
FDAT_ACT= FPlace_R1_L4_S1_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S1_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10266,10267,FPlace_R1_L4_S1_NP5,XPlace_R1_L4_S1_NP5) PRIO=-1
;FOLD PTP Place_R1_L4_S1_NP5 CONT Vel=100 % PPlace_R1_L4_S1_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S1_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S1_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S1_NP5
FDAT_ACT= FPlace_R1_L4_S1_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S1_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10267,10268,FPlace_R1_L4_S1_NP6,XPlace_R1_L4_S1_NP6) PRIO=-1
;FOLD PTP Place_R1_L4_S1_NP6 CONT Vel=100 % PPlace_R1_L4_S1_NP6 Tool[2]:Lower Gripper Base[0];%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Place_R1_L4_S1_NP6; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PPlace_R1_L4_S1_NP6; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPPlace_R1_L4_S1_NP6
FDAT_ACT = FPlace_R1_L4_S1_NP6
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XPlace_R1_L4_S1_NP6 C_Dis
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10268,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 4
RobAusStorage1_4_A70=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L4_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 4
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_4_A102=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_4_E70",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_4_A102=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_4_E70
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_4_A70=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10270,10002,FPlace_R1_L4_S2_VP1,XPlace_R1_L4_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L4_S2_VP1 CONT Vel=12 % PPlace_R1_L4_S2_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_VP1
FDAT_ACT= FPlace_R1_L4_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10271,10270,FPlace_R1_L4_S2_VP2,XPlace_R1_L4_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L4_S2_VP2 CONT Vel=12 % PPlace_R1_L4_S2_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_VP2
FDAT_ACT= FPlace_R1_L4_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10272,10271,FPlace_R1_L4_S2_VP3,XPlace_R1_L4_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L4_S2_VP3 CONT Vel=12 % PPlace_R1_L4_S2_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_VP3
FDAT_ACT= FPlace_R1_L4_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10273,10272,FPlace_R1_L4_S2_VP4,XPlace_R1_L4_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L4_S2_VP4 CONT Vel=12 % PPlace_R1_L4_S2_VP4 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_VP4
FDAT_ACT= FPlace_R1_L4_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S2_VP4 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10274,10273,FPlace_R1_L4_S2_Check,XPlace_R1_L4_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L4_S2_Check Vel=12 % PPlace_R1_L4_S2_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_Check, 3:, 5:12, 7:PPlace_R1_L4_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_Check
FDAT_ACT= FPlace_R1_L4_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10275,10274,FPlace_R1_L4_S2_VP5,XPlace_R1_L4_S2_VP5) PRIO=-1
;FOLD LIN Place_R1_L4_S2_VP5 CONT Vel=0.5 m/s LPlace_R1_L4_S2_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S2_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S2_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S2_VP5
FDAT_ACT= FPlace_R1_L4_S2_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S2_VP5 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10276,10275,FPlace_R1_L4_S2_VP6,XPlace_R1_L4_S2_VP6) PRIO=-1
;FOLD LIN Place_R1_L4_S2_VP6 CONT Vel=0.5 m/s LPlace_R1_L4_S2_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S2_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S2_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S2_VP6
FDAT_ACT= FPlace_R1_L4_S2_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S2_VP6 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10277,10276,FPlace_R1_L4_S2_VP7,XPlace_R1_L4_S2_VP7) PRIO=-1
;FOLD LIN Place_R1_L4_S2_VP7 CONT Vel=0.5 m/s LPlace_R1_L4_S2_VP7 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S2_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S2_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S2_VP7
FDAT_ACT= FPlace_R1_L4_S2_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S2_VP7 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10278,10279,FPlace_R1_L4_S2_AP,XPlace_R1_L4_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L4_S2_AP Vel=0.2 m/s LPlace_R1_L4_S2_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L4_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S2_AP
FDAT_ACT= FPlace_R1_L4_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10279,10280,FPlace_R1_L4_S2_NP1,XPlace_R1_L4_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L4_S2_NP1 Vel=0.2 m/s LPlace_R1_L4_S2_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S2_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L4_S2_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S2_NP1
FDAT_ACT= FPlace_R1_L4_S2_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10280,10281,FPlace_R1_L4_S2_NP2,XPlace_R1_L4_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L4_S2_NP2 Vel=0.5 m/s LPlace_R1_L4_S2_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S2_NP2, 3:, 5:0.5, 7:LPlace_R1_L4_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S2_NP2
FDAT_ACT= FPlace_R1_L4_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S2_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10281,10282,FPlace_R1_L4_S2_NP3,XPlace_R1_L4_S2_NP3) PRIO=-1
;FOLD PTP Place_R1_L4_S2_NP3 CONT Vel=100 % PPlace_R1_L4_S2_NP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S2_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_NP3
FDAT_ACT= FPlace_R1_L4_S2_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S2_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10282,10283,FPlace_R1_L4_S2_NP4,XPlace_R1_L4_S2_NP4) PRIO=-1
;FOLD PTP Place_R1_L4_S2_NP4 CONT Vel=100 % PPlace_R1_L4_S2_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S2_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_NP4
FDAT_ACT= FPlace_R1_L4_S2_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S2_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10283,10284,FPlace_R1_L4_S2_NP5,XPlace_R1_L4_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L4_S2_NP5 CONT Vel=100 % PPlace_R1_L4_S2_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S2_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S2_NP5
FDAT_ACT= FPlace_R1_L4_S2_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S2_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10284,10285,FPlace_R1_L4_S2_NP6,XPlace_R1_L4_S2_NP6) PRIO=-1
;FOLD PTP Place_R1_L4_S2_NP6 CONT Vel=100 % PPlace_R1_L4_S2_NP6 Tool[2]:Lower Gripper Base[0];%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Place_R1_L4_S2_NP6; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PPlace_R1_L4_S2_NP6; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPPlace_R1_L4_S2_NP6
FDAT_ACT = FPlace_R1_L4_S2_NP6
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XPlace_R1_L4_S2_NP6 C_Dis
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10285,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 4
RobAusStorage1_4_A70=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L4_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 4
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_4_A102=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_4_E70",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_4_A102=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_4_E70
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_4_A70=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10290,10002,FPlace_R1_L4_S3_VP1,XPlace_R1_L4_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L4_S3_VP1 CONT Vel=12 % PPlace_R1_L4_S3_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S3_VP1
FDAT_ACT= FPlace_R1_L4_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10291,10290,FPlace_R1_L4_S3_VP2,XPlace_R1_L4_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L4_S3_VP2 CONT Vel=12 % PPlace_R1_L4_S3_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S3_VP2
FDAT_ACT= FPlace_R1_L4_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S3_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10292,10291,FPlace_R1_L4_S3_VP3,XPlace_R1_L4_S3_VP3) PRIO=-1
;FOLD PTP Place_R1_L4_S3_VP3 CONT Vel=12 % PPlace_R1_L4_S3_VP3 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S3_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S3_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S3_VP3
FDAT_ACT= FPlace_R1_L4_S3_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S3_VP3 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10293,10292,FPlace_R1_L4_S3_Check,XPlace_R1_L4_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L4_S3_Check Vel=12 % PPlace_R1_L4_S3_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S3_Check, 3:, 5:12, 7:PPlace_R1_L4_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S3_Check
FDAT_ACT= FPlace_R1_L4_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10294,10293,FPlace_R1_L4_S3_VP4,XPlace_R1_L4_S3_VP4) PRIO=-1
;FOLD LIN Place_R1_L4_S3_VP4 CONT Vel=0.5 m/s LPlace_R1_L4_S3_VP4 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S3_VP4, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S3_VP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S3_VP4
FDAT_ACT= FPlace_R1_L4_S3_VP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S3_VP4 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10295,10294,FPlace_R1_L4_S3_VP5,XPlace_R1_L4_S3_VP5) PRIO=-1
;FOLD LIN Place_R1_L4_S3_VP5 CONT Vel=0.5 m/s LPlace_R1_L4_S3_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S3_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S3_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S3_VP5
FDAT_ACT= FPlace_R1_L4_S3_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S3_VP5 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10296,10295,FPlace_R1_L4_S3_VP6,XPlace_R1_L4_S3_VP6) PRIO=-1
;FOLD LIN Place_R1_L4_S3_VP6 CONT Vel=0.5 m/s LPlace_R1_L4_S3_VP6 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S3_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S3_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S3_VP6
FDAT_ACT= FPlace_R1_L4_S3_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S3_VP6 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10297,10298,FPlace_R1_L4_S3_AP,XPlace_R1_L4_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L4_S3_AP Vel=0.2 m/s LPlace_R1_L4_S3_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L4_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S3_AP
FDAT_ACT= FPlace_R1_L4_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10298,10299,FPlace_R1_L4_S3_NP1,XPlace_R1_L4_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L4_S3_NP1 Vel=0.2 m/s LPlace_R1_L4_S3_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L4_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S3_NP1
FDAT_ACT= FPlace_R1_L4_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10299,10300,FPlace_R1_L4_S3_NP2,XPlace_R1_L4_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L4_S3_NP2 CONT Vel=0.5 m/s LPlace_R1_L4_S3_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S3_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S3_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S3_NP2
FDAT_ACT= FPlace_R1_L4_S3_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S3_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10300,10301,FPlace_R1_L4_S3_NP3,XPlace_R1_L4_S3_NP3) PRIO=-1
;FOLD LIN Place_R1_L4_S3_NP3 Vel=0.5 m/s LPlace_R1_L4_S3_NP3 Tool[2]:Lower Gripper Base[1]:Rack 1 ;%{PE}
$BWDSTART=FALSE
LDAT_ACT=LLPlace_R1_L4_S3_NP3
FDAT_ACT=FPlace_R1_L4_S3_NP3
BAS(#CP_PARAMS, 0.5)
LIN XPlace_R1_L4_S3_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10301,10302,FPlace_R1_L4_S3_NP4,XPlace_R1_L4_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L4_S3_NP4 CONT Vel=100 % PPlace_R1_L4_S3_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S3_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S3_NP4
FDAT_ACT= FPlace_R1_L4_S3_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S3_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10302,10303,FPlace_R1_L4_S3_NP5,XPlace_R1_L4_S3_NP5) PRIO=-1
;FOLD PTP Place_R1_L4_S3_NP5 CONT Vel=100 % PPlace_R1_L4_S3_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S3_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S3_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S3_NP5
FDAT_ACT= FPlace_R1_L4_S3_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S3_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10303,10304,FPlace_R1_L4_S3_NP6,XPlace_R1_L4_S3_NP6) PRIO=-1
;FOLD PTP Place_R1_L4_S3_NP6 CONT Vel=100 % PPlace_R1_L4_S3_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S3_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S3_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S3_NP6
FDAT_ACT= FPlace_R1_L4_S3_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S3_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10304,10305,FPlace_R1_L4_S3_NP7,XPlace_R1_L4_S3_NP7) PRIO=-1
;FOLD PTP Place_R1_L4_S3_NP7 CONT Vel=100 % PPlace_R1_L4_S3_NP7 Tool[2]:Lower Gripper Base[0];%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Place_R1_L4_S3_NP7; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PPlace_R1_L4_S3_NP7; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPPlace_R1_L4_S3_NP7
FDAT_ACT = FPlace_R1_L4_S3_NP7
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XPlace_R1_L4_S3_NP7 C_Dis
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10305,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 4
RobAusStorage1_4_A70=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L4_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 4
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 2).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_2)
;***************************************************
; Enable part lost detection for tool 2
SetPartLostDetection(PART_ON_TOOL_2)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME1 THEN
  UP_HomeToHome(1)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10002,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=12 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:12, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,12)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_4_A102=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_4_E70",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_4_A102=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_4_E70
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_4_A70=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10310,10002,FPlace_R1_L4_S4_VP1,XPlace_R1_L4_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L4_S4_VP1 CONT Vel=12 % PPlace_R1_L4_S4_VP1 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S4_VP1
FDAT_ACT= FPlace_R1_L4_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10311,10310,FPlace_R1_L4_S4_VP2,XPlace_R1_L4_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L4_S4_VP2 CONT Vel=12 % PPlace_R1_L4_S4_VP2 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S4_VP2
FDAT_ACT= FPlace_R1_L4_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S4_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10312,10311,FPlace_R1_L4_S4_VP3,XPlace_R1_L4_S4_VP3) PRIO=-1
;FOLD PTP Place_R1_L4_S4_VP3 CONT Vel=12 % PPlace_R1_L4_S4_VP3 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S4_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L4_S4_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S4_VP3
FDAT_ACT= FPlace_R1_L4_S4_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S4_VP3 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10313,10312,FPlace_R1_L4_S4_Check,XPlace_R1_L4_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L4_S4_Check Vel=12 % PPlace_R1_L4_S4_Check Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S4_Check, 3:, 5:12, 7:PPlace_R1_L4_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S4_Check
FDAT_ACT= FPlace_R1_L4_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L4_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10314,10313,FPlace_R1_L4_S4_VP4,XPlace_R1_L4_S4_VP4) PRIO=-1
;FOLD LIN Place_R1_L4_S4_VP4 CONT Vel=0.5 m/s LPlace_R1_L4_S4_VP4 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S4_VP4, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S4_VP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S4_VP4
FDAT_ACT= FPlace_R1_L4_S4_VP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S4_VP4 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10315,10314,FPlace_R1_L4_S4_VP5,XPlace_R1_L4_S4_VP5) PRIO=-1
;FOLD LIN Place_R1_L4_S4_VP5 CONT Vel=0.5 m/s LPlace_R1_L4_S4_VP5 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S4_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S4_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S4_VP5
FDAT_ACT= FPlace_R1_L4_S4_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S4_VP5 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10316,10317,FPlace_R1_L4_S4_AP,XPlace_R1_L4_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L4_S4_AP Vel=0.2 m/s LPlace_R1_L4_S4_AP Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L4_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S4_AP
FDAT_ACT= FPlace_R1_L4_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10317,10318,FPlace_R1_L4_S4_NP1,XPlace_R1_L4_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L4_S4_NP1 Vel=0.2 m/s LPlace_R1_L4_S4_NP1 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S4_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L4_S4_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S4_NP1
FDAT_ACT= FPlace_R1_L4_S4_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L4_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10318,10319,FPlace_R1_L4_S4_NP2,XPlace_R1_L4_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L4_S4_NP2 CONT Vel=0.5 m/s LPlace_R1_L4_S4_NP2 Tool[2]:Lower Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L4_S4_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L4_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S4_NP2
FDAT_ACT= FPlace_R1_L4_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S4_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10319,10320,FPlace_R1_L4_S4_NP3,XPlace_R1_L4_S4_NP3) PRIO=-1
;FOLD LIN Place_R1_L4_S4_NP3 Vel=0.5 m/s LPlace_R1_L4_S4_NP3 Tool[2]:Lower Gripper Base[1]:Rack 1 ;%{PE}
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L4_S4_NP3
FDAT_ACT= FPlace_R1_L4_S4_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L4_S4_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10320,10321,FPlace_R1_L4_S4_NP4,XPlace_R1_L4_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L4_S4_NP4 CONT Vel=100 % PPlace_R1_L4_S4_NP4 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S4_NP4
FDAT_ACT= FPlace_R1_L4_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S4_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10321,10322,FPlace_R1_L4_S4_NP5,XPlace_R1_L4_S4_NP5) PRIO=-1
;FOLD PTP Place_R1_L4_S4_NP5 CONT Vel=100 % PPlace_R1_L4_S4_NP5 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S4_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S4_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S4_NP5
FDAT_ACT= FPlace_R1_L4_S4_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S4_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10322,10323,FPlace_R1_L4_S4_NP6,XPlace_R1_L4_S4_NP6) PRIO=-1
;FOLD PTP Place_R1_L4_S4_NP6 CONT Vel=100 % PPlace_R1_L4_S4_NP6 Tool[2]:Lower Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L4_S4_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L4_S4_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L4_S4_NP6
FDAT_ACT= FPlace_R1_L4_S4_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L4_S4_NP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10323,10002,FHOME1,$nullframe,XHOME1) PRIO=-1
;FOLD PTP HOME1 Vel=100 % PHome1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME1, 3:, 5:100, 7:PHome1
$BWDSTART=FALSE
PDAT_ACT= PPHome1
FDAT_ACT= FHOME1
BAS(#PTP_PARAMS,100)
PTP XHOME1
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 4
RobAusStorage1_4_A70=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L5_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 5
;    Shelf 1
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_5_A103=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_5_E71",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_5_A103=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_5_E71
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_5_A71=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10510,10501,FPlace_R1_L5_S1_VP1,XPlace_R1_L5_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP1 CONT Vel=12 % PPlace_R1_L5_S1_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP1
FDAT_ACT= FPlace_R1_L5_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10511,10510,FPlace_R1_L5_S1_VP2,XPlace_R1_L5_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP2 CONT Vel=12 % PPlace_R1_L5_S1_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP2
FDAT_ACT= FPlace_R1_L5_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10512,10511,FPlace_R1_L5_S1_VP3,XPlace_R1_L5_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP3 CONT Vel=12 % PPlace_R1_L5_S1_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP3
FDAT_ACT= FPlace_R1_L5_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10513,10512,FPlace_R1_L5_S1_VP4,XPlace_R1_L5_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP4 CONT Vel=12 % PPlace_R1_L5_S1_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP4
FDAT_ACT= FPlace_R1_L5_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10514,10513,FPlace_R1_L5_S1_VP5,XPlace_R1_L5_S1_VP5) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP5 CONT Vel=12 % PPlace_R1_L5_S1_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP5
FDAT_ACT= FPlace_R1_L5_S1_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10515,10514,FPlace_R1_L5_S1_VP6,XPlace_R1_L5_S1_VP6) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP6 CONT Vel=12 % PPlace_R1_L5_S1_VP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP6
FDAT_ACT= FPlace_R1_L5_S1_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10516,10515,FPlace_R1_L5_S1_VP7,XPlace_R1_L5_S1_VP7) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP7 CONT Vel=12 % PPlace_R1_L5_S1_VP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP7
FDAT_ACT= FPlace_R1_L5_S1_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10517,10516,FPlace_R1_L5_S1_VP8,XPlace_R1_L5_S1_VP8) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP8 CONT Vel=12 % PPlace_R1_L5_S1_VP8 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP8
FDAT_ACT= FPlace_R1_L5_S1_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP8 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10518,10517,FPlace_R1_L5_S1_VP9,XPlace_R1_L5_S1_VP9) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP9 CONT Vel=12 % PPlace_R1_L5_S1_VP9 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP9, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP9
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP9
FDAT_ACT= FPlace_R1_L5_S1_VP9
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP9 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10519,10518,FPlace_R1_L5_S1_VP10,XPlace_R1_L5_S1_VP10) PRIO=-1
;FOLD PTP Place_R1_L5_S1_VP10 CONT Vel=12 % PPlace_R1_L5_S1_VP10 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_VP10, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S1_VP10
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_VP10
FDAT_ACT= FPlace_R1_L5_S1_VP10
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_VP10 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10520,10519,FPlace_R1_L5_S1_Check,XPlace_R1_L5_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L5_S1_Check Vel=12 % PPlace_R1_L5_S1_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_Check, 3:, 5:12, 7:PPlace_R1_L5_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_Check
FDAT_ACT= FPlace_R1_L5_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10521,10520,FPlace_R1_L5_S1_VP11,XPlace_R1_L5_S1_VP11) PRIO=-1
;FOLD LIN Place_R1_L5_S1_VP11 CONT Vel=0.5 m/s LPlace_R1_L5_S1_VP11 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S1_VP11, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S1_VP11
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S1_VP11
FDAT_ACT= FPlace_R1_L5_S1_VP11
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S1_VP11 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10522,10523,FPlace_R1_L5_S1_AP,XPlace_R1_L5_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L5_S1_AP Vel=0.2 m/s LPlace_R1_L5_S1_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L5_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S1_AP
FDAT_ACT= FPlace_R1_L5_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10523,10524,FPlace_R1_L5_S1_NP1,XPlace_R1_L5_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L5_S1_NP1 Vel=0.2 m/s LPlace_R1_L5_S1_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S1_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L5_S1_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S1_NP1
FDAT_ACT= FPlace_R1_L5_S1_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10524,10525,FPlace_R1_L5_S1_NP2,XPlace_R1_L5_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L5_S1_NP2 Vel=0.5 m/s LPlace_R1_L5_S1_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S1_NP2, 3:, 5:0.5, 7:LPlace_R1_L5_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S1_NP2
FDAT_ACT= FPlace_R1_L5_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S1_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10525,10526,FPlace_R1_L5_S1_NP3,XPlace_R1_L5_S1_NP3) PRIO=-1
;FOLD PTP Place_R1_L5_S1_NP3 CONT Vel=100 % PPlace_R1_L5_S1_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S1_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_NP3
FDAT_ACT= FPlace_R1_L5_S1_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S1_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10526,10527,FPlace_R1_L5_S1_NP4,XPlace_R1_L5_S1_NP4) PRIO=-1
;FOLD PTP Place_R1_L5_S1_NP4 CONT Vel=100 % PPlace_R1_L5_S1_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S1_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_NP4
FDAT_ACT= FPlace_R1_L5_S1_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S1_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10527,10528,FPlace_R1_L5_S1_NP5,XPlace_R1_L5_S1_NP5) PRIO=-1
;FOLD PTP Place_R1_L5_S1_NP5 CONT Vel=100 % PPlace_R1_L5_S1_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S1_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_NP5
FDAT_ACT= FPlace_R1_L5_S1_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S1_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10528,10529,FPlace_R1_L5_S1_NP6,XPlace_R1_L5_S1_NP6) PRIO=-1
;FOLD PTP Place_R1_L5_S1_NP6 CONT Vel=100 % PPlace_R1_L5_S1_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S1_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S1_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S1_NP6
FDAT_ACT= FPlace_R1_L5_S1_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S1_NP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10529,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 5
RobAusStorage1_5_A71=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L5_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 5
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_5_A103=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_5_E71",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_5_A103=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_5_E71
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_5_A71=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10540,10501,FPlace_R1_L5_S2_VP1,XPlace_R1_L5_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP1 CONT Vel=12 % PPlace_R1_L5_S2_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP1
FDAT_ACT= FPlace_R1_L5_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10541,10540,FPlace_R1_L5_S2_VP2,XPlace_R1_L5_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP2 CONT Vel=12 % PPlace_R1_L5_S2_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP2
FDAT_ACT= FPlace_R1_L5_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10542,10541,FPlace_R1_L5_S2_VP3,XPlace_R1_L5_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP3 CONT Vel=12 % PPlace_R1_L5_S2_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP3
FDAT_ACT= FPlace_R1_L5_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10543,10542,FPlace_R1_L5_S2_VP4,XPlace_R1_L5_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP4 CONT Vel=12 % PPlace_R1_L5_S2_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP4
FDAT_ACT= FPlace_R1_L5_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10544,10543,FPlace_R1_L5_S2_VP5,XPlace_R1_L5_S2_VP5) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP5 CONT Vel=12 % PPlace_R1_L5_S2_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP5
FDAT_ACT= FPlace_R1_L5_S2_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10545,10544,FPlace_R1_L5_S2_VP6,XPlace_R1_L5_S2_VP6) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP6 CONT Vel=12 % PPlace_R1_L5_S2_VP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP6
FDAT_ACT= FPlace_R1_L5_S2_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10546,10545,FPlace_R1_L5_S2_VP7,XPlace_R1_L5_S2_VP7) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP7 CONT Vel=12 % PPlace_R1_L5_S2_VP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP7
FDAT_ACT= FPlace_R1_L5_S2_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10547,10546,FPlace_R1_L5_S2_VP8,XPlace_R1_L5_S2_VP8) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP8 CONT Vel=12 % PPlace_R1_L5_S2_VP8 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP8
FDAT_ACT= FPlace_R1_L5_S2_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP8 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10548,10547,FPlace_R1_L5_S2_VP9,XPlace_R1_L5_S2_VP9) PRIO=-1
;FOLD PTP Place_R1_L5_S2_VP9 CONT Vel=12 % PPlace_R1_L5_S2_VP9 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_VP9, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S2_VP9
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_VP9
FDAT_ACT= FPlace_R1_L5_S2_VP9
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_VP9 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10549,10548,FPlace_R1_L5_S2_Check,XPlace_R1_L5_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L5_S2_Check Vel=12 % PPlace_R1_L5_S2_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_Check, 3:, 5:12, 7:PPlace_R1_L5_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_Check
FDAT_ACT= FPlace_R1_L5_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10550,10549,FPlace_R1_L5_S2_VP10,XPlace_R1_L5_S2_VP10) PRIO=-1
;FOLD LIN Place_R1_L5_S2_VP10 CONT Vel=0.5 m/s LPlace_R1_L5_S2_VP10 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_VP10, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S2_VP10
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_VP10
FDAT_ACT= FPlace_R1_L5_S2_VP10
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S2_VP10 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10551,10550,FPlace_R1_L5_S2_VP11,XPlace_R1_L5_S2_VP11) PRIO=-1
;FOLD LIN Place_R1_L5_S2_VP11 CONT Vel=0.5 m/s LPlace_R1_L5_S2_VP11 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_VP11, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S2_VP11
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_VP11
FDAT_ACT= FPlace_R1_L5_S2_VP11
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S2_VP11 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10552,10551,FPlace_R1_L5_S2_VP12,XPlace_R1_L5_S2_VP12) PRIO=-1
;FOLD LIN Place_R1_L5_S2_VP12 CONT Vel=0.5 m/s LPlace_R1_L5_S2_VP12 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_VP12, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S2_VP12
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_VP12
FDAT_ACT= FPlace_R1_L5_S2_VP12
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S2_VP12 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10553,10554,FPlace_R1_L5_S2_AP,XPlace_R1_L5_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L5_S2_AP Vel=0.2 m/s LPlace_R1_L5_S2_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L5_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_AP
FDAT_ACT= FPlace_R1_L5_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10554,10555,FPlace_R1_L5_S2_NP1,XPlace_R1_L5_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L5_S2_NP1 Vel=0.2 m/s LPlace_R1_L5_S2_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L5_S2_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_NP1
FDAT_ACT= FPlace_R1_L5_S2_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10555,10556,FPlace_R1_L5_S2_NP2,XPlace_R1_L5_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L5_S2_NP2 CONT Vel=0.5 m/s LPlace_R1_L5_S2_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_NP2
FDAT_ACT= FPlace_R1_L5_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S2_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10556,10557,FPlace_R1_L5_S2_NP3,XPlace_R1_L5_S2_NP3) PRIO=-1
;FOLD LIN Place_R1_L5_S2_NP3 CONT Vel=0.5 m/s LPlace_R1_L5_S2_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_NP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S2_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_NP3
FDAT_ACT= FPlace_R1_L5_S2_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S2_NP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10557,10558,FPlace_R1_L5_S2_NP4,XPlace_R1_L5_S2_NP4) PRIO=-1
;FOLD LIN Place_R1_L5_S2_NP4 Vel=0.5 m/s LPlace_R1_L5_S2_NP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S2_NP4, 3:, 5:0.5, 7:LPlace_R1_L5_S2_NP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S2_NP4
FDAT_ACT= FPlace_R1_L5_S2_NP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S2_NP4
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10558,10559,FPlace_R1_L5_S2_NP5,XPlace_R1_L5_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L5_S2_NP5 CONT Vel=100 % PPlace_R1_L5_S2_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_NP5
FDAT_ACT= FPlace_R1_L5_S2_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S2_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10559,10560,FPlace_R1_L5_S2_NP6,XPlace_R1_L5_S2_NP6) PRIO=-1
;FOLD PTP Place_R1_L5_S2_NP6 CONT Vel=100 % PPlace_R1_L5_S2_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S2_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_NP6
FDAT_ACT= FPlace_R1_L5_S2_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S2_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10560,10561,FPlace_R1_L5_S2_NP7,XPlace_R1_L5_S2_NP7) PRIO=-1
;FOLD PTP Place_R1_L5_S2_NP7 CONT Vel=100 % PPlace_R1_L5_S2_NP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S2_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_NP7
FDAT_ACT= FPlace_R1_L5_S2_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S2_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10561,10562,FPlace_R1_L5_S2_NP8,XPlace_R1_L5_S2_NP8) PRIO=-1
;FOLD PTP Place_R1_L5_S2_NP8 CONT Vel=100 % PPlace_R1_L5_S2_NP8 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S2_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S2_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S2_NP8
FDAT_ACT= FPlace_R1_L5_S2_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S2_NP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10562,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 5
RobAusStorage1_5_A71=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L5_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 5
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_5_A103=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_5_E71",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_5_A103=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_5_E71
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_5_A71=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10570,10501,FPlace_R1_L5_S3_VP1,XPlace_R1_L5_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L5_S3_VP1 CONT Vel=12 % PPlace_R1_L5_S3_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S3_VP1
FDAT_ACT= FPlace_R1_L5_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10571,10570,FPlace_R1_L5_S3_VP2,XPlace_R1_L5_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L5_S3_VP2 CONT Vel=12 % PPlace_R1_L5_S3_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S3_VP2
FDAT_ACT= FPlace_R1_L5_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S3_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10572,10571,FPlace_R1_L5_S3_VP3,XPlace_R1_L5_S3_VP3) PRIO=-1
;FOLD PTP Place_R1_L5_S3_VP3 CONT Vel=12 % PPlace_R1_L5_S3_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S3_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S3_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S3_VP3
FDAT_ACT= FPlace_R1_L5_S3_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S3_VP3 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10573,10572,FPlace_R1_L5_S3_Check,XPlace_R1_L5_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L5_S3_Check Vel=12 % PPlace_R1_L5_S3_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S3_Check, 3:, 5:12, 7:PPlace_R1_L5_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S3_Check
FDAT_ACT= FPlace_R1_L5_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10574,10573,FPlace_R1_L5_S3_VP4,XPlace_R1_L5_S3_VP4) PRIO=-1
;FOLD LIN Place_R1_L5_S3_VP4 CONT Vel=0.5 m/s LPlace_R1_L5_S3_VP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S3_VP4, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S3_VP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S3_VP4
FDAT_ACT= FPlace_R1_L5_S3_VP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S3_VP4 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10575,10574,FPlace_R1_L5_S3_VP5,XPlace_R1_L5_S3_VP5) PRIO=-1
;FOLD LIN Place_R1_L5_S3_VP5 CONT Vel=0.5 m/s LPlace_R1_L5_S3_VP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S3_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S3_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S3_VP5
FDAT_ACT= FPlace_R1_L5_S3_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S3_VP5 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10576,10575,FPlace_R1_L5_S3_VP6,XPlace_R1_L5_S3_VP6) PRIO=-1
;FOLD LIN Place_R1_L5_S3_VP6 CONT Vel=0.5 m/s LPlace_R1_L5_S3_VP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S3_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S3_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S3_VP6
FDAT_ACT= FPlace_R1_L5_S3_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S3_VP6 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10577,10578,FPlace_R1_L5_S3_AP,XPlace_R1_L5_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L5_S3_AP Vel=0.2 m/s LPlace_R1_L5_S3_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L5_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S3_AP
FDAT_ACT= FPlace_R1_L5_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10578,10579,FPlace_R1_L5_S3_NP1,XPlace_R1_L5_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L5_S3_NP1 Vel=0.2 m/s LPlace_R1_L5_S3_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L5_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S3_NP1
FDAT_ACT= FPlace_R1_L5_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10579,10580,FPlace_R1_L5_S3_NP2,XPlace_R1_L5_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L5_S3_NP2 Vel=0.5 m/s LPlace_R1_L5_S3_NP2 Tool[1]:Upper Gripper Base[1]:Rack 1 ;%{PE}
$BWDSTART = FALSE
LDAT_ACT = LLPlace_R1_L5_S3_NP2
FDAT_ACT = FPlace_R1_L5_S3_NP2
BAS(#CP_PARAMS, 0.5)
LIN XPlace_R1_L5_S3_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10580,10581,FPlace_R1_L5_S3_NP3,XPlace_R1_L5_S3_NP3) PRIO=-1
;FOLD PTP Place_R1_L5_S3_NP3 CONT Vel=100 % PPlace_R1_L5_S3_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S3_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S3_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S3_NP3
FDAT_ACT= FPlace_R1_L5_S3_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S3_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10581,10582,FPlace_R1_L5_S3_NP4,XPlace_R1_L5_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L5_S3_NP4 CONT Vel=100 % PPlace_R1_L5_S3_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S3_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S3_NP4
FDAT_ACT= FPlace_R1_L5_S3_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S3_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10582,10583,FPlace_R1_L5_S3_NP5,XPlace_R1_L5_S3_NP5) PRIO=-1
;FOLD PTP Place_R1_L5_S3_NP5 CONT Vel=100 % PPlace_R1_L5_S3_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S3_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S3_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S3_NP5
FDAT_ACT= FPlace_R1_L5_S3_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S3_NP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10583,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 5
RobAusStorage1_5_A71=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L5_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 5
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_5_A103=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_5_E71",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_5_A103=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_5_E71
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_5_A71=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10590,10501,FPlace_R1_L5_S4_VP1,XPlace_R1_L5_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L5_S4_VP1 CONT Vel=12 % PPlace_R1_L5_S4_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_VP1
FDAT_ACT= FPlace_R1_L5_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10591,10590,FPlace_R1_L5_S4_VP2,XPlace_R1_L5_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L5_S4_VP2 CONT Vel=12 % PPlace_R1_L5_S4_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_VP2
FDAT_ACT= FPlace_R1_L5_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S4_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10592,10591,FPlace_R1_L5_S4_VP3,XPlace_R1_L5_S4_VP3) PRIO=-1
;FOLD PTP Place_R1_L5_S4_VP3 CONT Vel=12 % PPlace_R1_L5_S4_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S4_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_VP3
FDAT_ACT= FPlace_R1_L5_S4_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S4_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10593,10592,FPlace_R1_L5_S4_VP4,XPlace_R1_L5_S4_VP4) PRIO=-1
;FOLD PTP Place_R1_L5_S4_VP4 CONT Vel=12 % PPlace_R1_L5_S4_VP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L5_S4_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_VP4
FDAT_ACT= FPlace_R1_L5_S4_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S4_VP4 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10594,10593,FPlace_R1_L5_S4_Check,XPlace_R1_L5_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L5_S4_Check Vel=12 % PPlace_R1_L5_S4_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_Check, 3:, 5:12, 7:PPlace_R1_L5_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_Check
FDAT_ACT= FPlace_R1_L5_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L5_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10595,10594,FPlace_R1_L5_S4_VP5,XPlace_R1_L5_S4_VP5) PRIO=-1
;FOLD LIN Place_R1_L5_S4_VP5 CONT Vel=0.5 m/s LPlace_R1_L5_S4_VP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S4_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L5_S4_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S4_VP5
FDAT_ACT= FPlace_R1_L5_S4_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S4_VP5 C_DIS C_DIS
;ENDFOLD

;***************************************************
;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10596,10597,FPlace_R1_L5_S4_AP,XPlace_R1_L5_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L5_S4_AP Vel=0.2 m/s LPlace_R1_L5_S4_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L5_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S4_AP
FDAT_ACT= FPlace_R1_L5_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10597,10598,FPlace_R1_L5_S4_NP1,XPlace_R1_L5_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L5_S4_NP1 Vel=0.2 m/s LPlace_R1_L5_S4_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S4_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L5_S4_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S4_NP1
FDAT_ACT= FPlace_R1_L5_S4_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L5_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10598,10599,FPlace_R1_L5_S4_NP2,XPlace_R1_L5_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L5_S4_NP2 Vel=0.5 m/s LPlace_R1_L5_S4_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L5_S4_NP2, 3:, 5:0.5, 7:LPlace_R1_L5_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L5_S4_NP2
FDAT_ACT= FPlace_R1_L5_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L5_S4_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10599,10600,FPlace_R1_L5_S4_NP3,XPlace_R1_L5_S4_NP3) PRIO=-1
;FOLD PTP Place_R1_L5_S4_NP3 CONT Vel=100 % PPlace_R1_L5_S4_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S4_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_NP3
FDAT_ACT= FPlace_R1_L5_S4_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S4_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10600,10601,FPlace_R1_L5_S4_NP4,XPlace_R1_L5_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L5_S4_NP4 CONT Vel=100 % PPlace_R1_L5_S4_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_NP4
FDAT_ACT= FPlace_R1_L5_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S4_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10601,10602,FPlace_R1_L5_S4_NP5,XPlace_R1_L5_S4_NP5) PRIO=-1
;FOLD PTP Place_R1_L5_S4_NP5 CONT Vel=100 % PPlace_R1_L5_S4_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L5_S4_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L5_S4_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L5_S4_NP5
FDAT_ACT= FPlace_R1_L5_S4_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L5_S4_NP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10602,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 5
RobAusStorage1_5_A71=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L6_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 6
;    Shelf 1
;  RBG Kollision beachten!
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_6_A104=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_6_E72",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_6_A104=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_6_E72
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_6_A72=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10610,10501,FPlace_R1_L6_S1_VP1,XPlace_R1_L6_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP1 CONT Vel=12 % PPlace_R1_L6_S1_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP1
FDAT_ACT= FPlace_R1_L6_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10611,10610,FPlace_R1_L6_S1_VP2,XPlace_R1_L6_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP2 CONT Vel=12 % PPlace_R1_L6_S1_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP2
FDAT_ACT= FPlace_R1_L6_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10612,10611,FPlace_R1_L6_S1_VP3,XPlace_R1_L6_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP3 CONT Vel=12 % PPlace_R1_L6_S1_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP3
FDAT_ACT= FPlace_R1_L6_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10613,10612,FPlace_R1_L6_S1_VP4,XPlace_R1_L6_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP4 CONT Vel=12 % PPlace_R1_L6_S1_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP4
FDAT_ACT= FPlace_R1_L6_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10614,10613,FPlace_R1_L6_S1_VP5,XPlace_R1_L6_S1_VP5) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP5 CONT Vel=12 % PPlace_R1_L6_S1_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP5
FDAT_ACT= FPlace_R1_L6_S1_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10615,10614,FPlace_R1_L6_S1_VP6,XPlace_R1_L6_S1_VP6) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP6 CONT Vel=12 % PPlace_R1_L6_S1_VP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP6
FDAT_ACT= FPlace_R1_L6_S1_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10616,10615,FPlace_R1_L6_S1_VP7,XPlace_R1_L6_S1_VP7) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP7 CONT Vel=12 % PPlace_R1_L6_S1_VP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP7
FDAT_ACT= FPlace_R1_L6_S1_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10617,10616,FPlace_R1_L6_S1_VP8,XPlace_R1_L6_S1_VP8) PRIO=-1
;FOLD PTP Place_R1_L6_S1_VP8 CONT Vel=12 % PPlace_R1_L6_S1_VP8 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S1_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_VP8
FDAT_ACT= FPlace_R1_L6_S1_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_VP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10618,10617,FPlace_R1_L6_S1_Check,XPlace_R1_L6_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L6_S1_Check Vel=12 % PPlace_R1_L6_S1_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_Check, 3:, 5:12, 7:PPlace_R1_L6_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_Check
FDAT_ACT= FPlace_R1_L6_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10619,10618,FPlace_R1_L6_S1_VP9,XPlace_R1_L6_S1_VP9) PRIO=-1
;FOLD LIN Place_R1_L6_S1_VP9 CONT Vel=0.5 m/s LPlace_R1_L6_S1_VP9 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S1_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S1_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S1_VP9
FDAT_ACT= FPlace_R1_L6_S1_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S1_VP9 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10620,10619,FPlace_R1_L6_S1_VP10,XPlace_R1_L6_S1_VP10) PRIO=-1
;FOLD LIN Place_R1_L6_S1_VP10 CONT Vel=0.5 m/s LPlace_R1_L6_S1_VP10 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S1_VP10, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S1_VP10
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S1_VP10
FDAT_ACT= FPlace_R1_L6_S1_VP10
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S1_VP10 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10621,10620,FPlace_R1_L6_S1_VP11,XPlace_R1_L6_S1_VP11) PRIO=-1
;FOLD LIN Place_R1_L6_S1_VP11 CONT Vel=0.5 m/s LPlace_R1_L6_S1_VP11 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S1_VP11, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S1_VP11
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S1_VP11
FDAT_ACT= FPlace_R1_L6_S1_VP11
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S1_VP11 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10622,10623,FPlace_R1_L6_S1_AP,XPlace_R1_L6_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L6_S1_AP Vel=0.2 m/s LPlace_R1_L6_S1_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L6_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S1_AP
FDAT_ACT= FPlace_R1_L6_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10623,10624,FPlace_R1_L6_S1_NP1,XPlace_R1_L6_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L6_S1_NP1 Vel=0.2 m/s LPlace_R1_L6_S1_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S1_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L6_S1_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S1_NP1
FDAT_ACT= FPlace_R1_L6_S1_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10624,10625,FPlace_R1_L6_S1_NP2,XPlace_R1_L6_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L6_S1_NP2 CONT Vel=0.5 m/s LPlace_R1_L6_S1_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S1_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S1_NP2
FDAT_ACT= FPlace_R1_L6_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S1_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10625,10626,FPlace_R1_L6_S1_NP3,XPlace_R1_L6_S1_NP3) PRIO=-1
;FOLD LIN Place_R1_L6_S1_NP3 Vel=0.5 m/s LPlace_R1_L6_S1_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S1_NP3, 3:, 5:0.5, 7:LPlace_R1_L6_S1_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S1_NP3
FDAT_ACT= FPlace_R1_L6_S1_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S1_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10626,10627,FPlace_R1_L6_S1_NP4,XPlace_R1_L6_S1_NP4) PRIO=-1
;FOLD PTP Place_R1_L6_S1_NP4 CONT Vel=100 % PPlace_R1_L6_S1_NP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S1_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_NP4
FDAT_ACT= FPlace_R1_L6_S1_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S1_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10627,10628,FPlace_R1_L6_S1_NP5,XPlace_R1_L6_S1_NP5) PRIO=-1
;FOLD PTP Place_R1_L6_S1_NP5 CONT Vel=100 % PPlace_R1_L6_S1_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S1_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_NP5
FDAT_ACT= FPlace_R1_L6_S1_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S1_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10628,10629,FPlace_R1_L6_S1_NP6,XPlace_R1_L6_S1_NP6) PRIO=-1
;FOLD PTP Place_R1_L6_S1_NP6 CONT Vel=100 % PPlace_R1_L6_S1_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S1_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_NP6
FDAT_ACT= FPlace_R1_L6_S1_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S1_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10629,10630,FPlace_R1_L6_S1_NP7,XPlace_R1_L6_S1_NP7) PRIO=-1
;FOLD PTP Place_R1_L6_S1_NP7 CONT Vel=100 % PPlace_R1_L6_S1_NP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S1_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S1_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S1_NP7
FDAT_ACT= FPlace_R1_L6_S1_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S1_NP7 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10630,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 6
RobAusStorage1_6_A72=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L6_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 6
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_6_A104=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_6_E72",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_6_A104=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_6_E72
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_6_A72=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10640,10501,FPlace_R1_L6_S2_VP1,XPlace_R1_L6_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP1 CONT Vel=12 % PPlace_R1_L6_S2_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP1
FDAT_ACT= FPlace_R1_L6_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10641,10640,FPlace_R1_L6_S2_VP2,XPlace_R1_L6_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP2 CONT Vel=12 % PPlace_R1_L6_S2_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP2
FDAT_ACT= FPlace_R1_L6_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10642,10641,FPlace_R1_L6_S2_VP3,XPlace_R1_L6_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP3 CONT Vel=12 % PPlace_R1_L6_S2_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP3
FDAT_ACT= FPlace_R1_L6_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10643,10642,FPlace_R1_L6_S2_VP4,XPlace_R1_L6_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP4 CONT Vel=12 % PPlace_R1_L6_S2_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP4
FDAT_ACT= FPlace_R1_L6_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10644,10643,FPlace_R1_L6_S2_VP5,XPlace_R1_L6_S2_VP5) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP5 CONT Vel=12 % PPlace_R1_L6_S2_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP5
FDAT_ACT= FPlace_R1_L6_S2_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10645,10644,FPlace_R1_L6_S2_VP6,XPlace_R1_L6_S2_VP6) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP6 CONT Vel=12 % PPlace_R1_L6_S2_VP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP6
FDAT_ACT= FPlace_R1_L6_S2_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10646,10645,FPlace_R1_L6_S2_VP7,XPlace_R1_L6_S2_VP7) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP7 CONT Vel=12 % PPlace_R1_L6_S2_VP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP7
FDAT_ACT= FPlace_R1_L6_S2_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10647,10646,FPlace_R1_L6_S2_VP8,XPlace_R1_L6_S2_VP8) PRIO=-1
;FOLD PTP Place_R1_L6_S2_VP8 CONT Vel=12 % PPlace_R1_L6_S2_VP8 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S2_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_VP8
FDAT_ACT= FPlace_R1_L6_S2_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_VP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10648,10647,FPlace_R1_L6_S2_Check,XPlace_R1_L6_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L6_S2_Check Vel=12 % PPlace_R1_L6_S2_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_Check, 3:, 5:12, 7:PPlace_R1_L6_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_Check
FDAT_ACT= FPlace_R1_L6_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10649,10648,FPlace_R1_L6_S2_VP9,XPlace_R1_L6_S2_VP9) PRIO=-1
;FOLD LIN Place_R1_L6_S2_VP9 CONT Vel=0.5 m/s LPlace_R1_L6_S2_VP9 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S2_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S2_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S2_VP9
FDAT_ACT= FPlace_R1_L6_S2_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S2_VP9 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10650,10649,FPlace_R1_L6_S2_VP10,XPlace_R1_L6_S2_VP10) PRIO=-1
;FOLD LIN Place_R1_L6_S2_VP10 CONT Vel=0.5 m/s LPlace_R1_L6_S2_VP10 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S2_VP10, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S2_VP10
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S2_VP10
FDAT_ACT= FPlace_R1_L6_S2_VP10
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S2_VP10 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10651,10650,FPlace_R1_L6_S2_VP11,XPlace_R1_L6_S2_VP11) PRIO=-1
;FOLD LIN Place_R1_L6_S2_VP11 CONT Vel=0.5 m/s LPlace_R1_L6_S2_VP11 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S2_VP11, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S2_VP11
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S2_VP11
FDAT_ACT= FPlace_R1_L6_S2_VP11
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S2_VP11 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10652,10653,FPlace_R1_L6_S2_AP,XPlace_R1_L6_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L6_S2_AP Vel=0.2 m/s LPlace_R1_L6_S2_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L6_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S2_AP
FDAT_ACT= FPlace_R1_L6_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10653,10654,FPlace_R1_L6_S2_NP1,XPlace_R1_L6_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L6_S2_NP1 Vel=0.2 m/s LPlace_R1_L6_S2_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S2_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L6_S2_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S2_NP1
FDAT_ACT= FPlace_R1_L6_S2_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10654,10655,FPlace_R1_L6_S2_NP2,XPlace_R1_L6_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L6_S2_NP2 CONT Vel=0.5 m/s LPlace_R1_L6_S2_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S2_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S2_NP2
FDAT_ACT= FPlace_R1_L6_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S2_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10655,10656,FPlace_R1_L6_S2_NP3,XPlace_R1_L6_S2_NP3) PRIO=-1
;FOLD LIN Place_R1_L6_S2_NP3 Vel=0.5 m/s LPlace_R1_L6_S2_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S2_NP3, 3:, 5:0.5, 7:LPlace_R1_L6_S2_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S2_NP3
FDAT_ACT= FPlace_R1_L6_S2_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S2_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10656,10657,FPlace_R1_L6_S2_NP4,XPlace_R1_L6_S2_NP4) PRIO=-1
;FOLD PTP Place_R1_L6_S2_NP4 CONT Vel=100 % PPlace_R1_L6_S2_NP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S2_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_NP4
FDAT_ACT= FPlace_R1_L6_S2_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S2_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10657,10658,FPlace_R1_L6_S2_NP5,XPlace_R1_L6_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L6_S2_NP5 CONT Vel=100 % PPlace_R1_L6_S2_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_NP5
FDAT_ACT= FPlace_R1_L6_S2_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S2_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10658,10659,FPlace_R1_L6_S2_NP6,XPlace_R1_L6_S2_NP6) PRIO=-1
;FOLD PTP Place_R1_L6_S2_NP6 CONT Vel=100 % PPlace_R1_L6_S2_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S2_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S2_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S2_NP6
FDAT_ACT= FPlace_R1_L6_S2_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S2_NP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10659,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 6
RobAusStorage1_6_A72=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L6_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 6
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_6_A104=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_6_E72",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_6_A104=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_6_E72
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_6_A72=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10670,10501,FPlace_R1_L6_S3_VP1,XPlace_R1_L6_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L6_S3_VP1 CONT Vel=12 % PPlace_R1_L6_S3_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S3_VP1
FDAT_ACT= FPlace_R1_L6_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10671,10670,FPlace_R1_L6_S3_VP2,XPlace_R1_L6_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L6_S3_VP2 CONT Vel=12 % PPlace_R1_L6_S3_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S3_VP2
FDAT_ACT= FPlace_R1_L6_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S3_VP2 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10672,10671,FPlace_R1_L6_S3_Check,XPlace_R1_L6_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L6_S3_Check Vel=12 % PPlace_R1_L6_S3_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S3_Check, 3:, 5:12, 7:PPlace_R1_L6_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S3_Check
FDAT_ACT= FPlace_R1_L6_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10673,10672,FPlace_R1_L6_S3_VP3,XPlace_R1_L6_S3_VP3) PRIO=-1
;FOLD LIN Place_R1_L6_S3_VP3 CONT Vel=0.5 m/s LPlace_R1_L6_S3_VP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S3_VP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S3_VP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S3_VP3
FDAT_ACT= FPlace_R1_L6_S3_VP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S3_VP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10674,10673,FPlace_R1_L6_S3_VP4,XPlace_R1_L6_S3_VP4) PRIO=-1
;FOLD LIN Place_R1_L6_S3_VP4 CONT Vel=0.5 m/s LPlace_R1_L6_S3_VP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S3_VP4, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S3_VP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S3_VP4
FDAT_ACT= FPlace_R1_L6_S3_VP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S3_VP4 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10675,10674,FPlace_R1_L6_S3_VP5,XPlace_R1_L6_S3_VP5) PRIO=-1
;FOLD LIN Place_R1_L6_S3_VP5 CONT Vel=0.5 m/s LPlace_R1_L6_S3_VP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S3_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S3_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S3_VP5
FDAT_ACT= FPlace_R1_L6_S3_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S3_VP5 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10676,10677,FPlace_R1_L6_S3_AP,XPlace_R1_L6_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L6_S3_AP Vel=0.2 m/s LPlace_R1_L6_S3_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L6_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S3_AP
FDAT_ACT= FPlace_R1_L6_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10677,10678,FPlace_R1_L6_S3_NP1,XPlace_R1_L6_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L6_S3_NP1 Vel=0.2 m/s LPlace_R1_L6_S3_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L6_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S3_NP1
FDAT_ACT= FPlace_R1_L6_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10678,10679,FPlace_R1_L6_S3_NP2,XPlace_R1_L6_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L6_S3_NP2 CONT Vel=0.5 m/s LPlace_R1_L6_S3_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S3_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S3_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S3_NP2
FDAT_ACT= FPlace_R1_L6_S3_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S3_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10679,10680,FPlace_R1_L6_S3_NP3,XPlace_R1_L6_S3_NP3) PRIO=-1
;FOLD LIN Place_R1_L6_S3_NP3 Vel=0.5 m/s LPlace_R1_L6_S3_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S3_NP3, 3:, 5:0.5, 7:LPlace_R1_L6_S3_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S3_NP3
FDAT_ACT= FPlace_R1_L6_S3_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S3_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10680,10681,FPlace_R1_L6_S3_NP4,XPlace_R1_L6_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L6_S3_NP4 CONT Vel=100 % PPlace_R1_L6_S3_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S3_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S3_NP4
FDAT_ACT= FPlace_R1_L6_S3_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S3_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10681,10682,FPlace_R1_L6_S3_NP5,XPlace_R1_L6_S3_NP5) PRIO=-1
;FOLD PTP Place_R1_L6_S3_NP5 CONT Vel=100 % PPlace_R1_L6_S3_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S3_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S3_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S3_NP5
FDAT_ACT= FPlace_R1_L6_S3_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S3_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10682,10683,FPlace_R1_L6_S3_NP6,XPlace_R1_L6_S3_NP6) PRIO=-1
;FOLD PTP Place_R1_L6_S3_NP6 CONT Vel=100 % PPlace_R1_L6_S3_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S3_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S3_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S3_NP6
FDAT_ACT= FPlace_R1_L6_S3_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S3_NP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10683,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 6
RobAusStorage1_6_A72=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L6_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 6
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_6_A104=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_6_E72",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_6_A104=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_6_E72
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_6_A72=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10690,10501,FPlace_R1_L6_S4_VP1,XPlace_R1_L6_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L6_S4_VP1 CONT Vel=12 % PPlace_R1_L6_S4_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S4_VP1
FDAT_ACT= FPlace_R1_L6_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10691,10690,FPlace_R1_L6_S4_VP2,XPlace_R1_L6_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L6_S4_VP2 CONT Vel=12 % PPlace_R1_L6_S4_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L6_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S4_VP2
FDAT_ACT= FPlace_R1_L6_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S4_VP2 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10692,10691,FPlace_R1_L6_S4_Check,XPlace_R1_L6_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L6_S4_Check Vel=12 % PPlace_R1_L6_S4_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S4_Check, 3:, 5:12, 7:PPlace_R1_L6_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S4_Check
FDAT_ACT= FPlace_R1_L6_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L6_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10693,10692,FPlace_R1_L6_S4_VP3,XPlace_R1_L6_S4_VP3) PRIO=-1
;FOLD LIN Place_R1_L6_S4_VP3 CONT Vel=0.5 m/s LPlace_R1_L6_S4_VP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S4_VP3, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S4_VP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S4_VP3
FDAT_ACT= FPlace_R1_L6_S4_VP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S4_VP3 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10694,10693,FPlace_R1_L6_S4_VP4,XPlace_R1_L6_S4_VP4) PRIO=-1
;FOLD LIN Place_R1_L6_S4_VP4 CONT Vel=0.5 m/s LPlace_R1_L6_S4_VP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S4_VP4, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S4_VP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S4_VP4
FDAT_ACT= FPlace_R1_L6_S4_VP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S4_VP4 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10695,10694,FPlace_R1_L6_S4_VP5,XPlace_R1_L6_S4_VP5) PRIO=-1
;FOLD LIN Place_R1_L6_S4_VP5 CONT Vel=0.5 m/s LPlace_R1_L6_S4_VP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S4_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S4_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S4_VP5
FDAT_ACT= FPlace_R1_L6_S4_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S4_VP5 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10696,10697,FPlace_R1_L6_S4_AP,XPlace_R1_L6_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L6_S4_AP Vel=0.2 m/s LPlace_R1_L6_S4_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L6_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S4_AP
FDAT_ACT= FPlace_R1_L6_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10697,10698,FPlace_R1_L6_S4_NP1,XPlace_R1_L6_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L6_S4_NP1 Vel=0.2 m/s LPlace_R1_L6_S4_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S4_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L6_S4_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S4_NP1
FDAT_ACT= FPlace_R1_L6_S4_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L6_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10698,10699,FPlace_R1_L6_S4_NP2,XPlace_R1_L6_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L6_S4_NP2 CONT Vel=0.5 m/s LPlace_R1_L6_S4_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S4_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L6_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S4_NP2
FDAT_ACT= FPlace_R1_L6_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S4_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10699,10700,FPlace_R1_L6_S4_NP3,XPlace_R1_L6_S4_NP3) PRIO=-1
;FOLD LIN Place_R1_L6_S4_NP3 Vel=0.5 m/s LPlace_R1_L6_S4_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L6_S4_NP3, 3:, 5:0.5, 7:LPlace_R1_L6_S4_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L6_S4_NP3
FDAT_ACT= FPlace_R1_L6_S4_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L6_S4_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10700,10701,FPlace_R1_L6_S4_NP4,XPlace_R1_L6_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L6_S4_NP4 CONT Vel=100 % PPlace_R1_L6_S4_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S4_NP4
FDAT_ACT= FPlace_R1_L6_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S4_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10701,10702,FPlace_R1_L6_S4_NP5,XPlace_R1_L6_S4_NP5) PRIO=-1
;FOLD PTP Place_R1_L6_S4_NP5 CONT Vel=100 % PPlace_R1_L6_S4_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S4_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S4_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S4_NP5
FDAT_ACT= FPlace_R1_L6_S4_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S4_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10702,10703,FPlace_R1_L6_S4_NP6,XPlace_R1_L6_S4_NP6) PRIO=-1
;FOLD PTP Place_R1_L6_S4_NP6 CONT Vel=100 % PPlace_R1_L6_S4_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L6_S4_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L6_S4_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L6_S4_NP6
FDAT_ACT= FPlace_R1_L6_S4_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L6_S4_NP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10703,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 6
RobAusStorage1_6_A72=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L7_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 7
;    Shelf 1
;  RBG Kollision beachten!
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_7_A105=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_7_E73",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_7_A105=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_7_E73
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_7_A73=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10710,10501,FPlace_R1_L7_S1_VP1,XPlace_R1_L7_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP1 CONT Vel=12 % PPlace_R1_L7_S1_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP1
FDAT_ACT= FPlace_R1_L7_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10711,10710,FPlace_R1_L7_S1_VP2,XPlace_R1_L7_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP2 CONT Vel=12 % PPlace_R1_L7_S1_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP2
FDAT_ACT= FPlace_R1_L7_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10712,10711,FPlace_R1_L7_S1_VP3,XPlace_R1_L7_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP3 CONT Vel=12 % PPlace_R1_L7_S1_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP3
FDAT_ACT= FPlace_R1_L7_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10713,10712,FPlace_R1_L7_S1_VP4,XPlace_R1_L7_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP4 CONT Vel=12 % PPlace_R1_L7_S1_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP4
FDAT_ACT= FPlace_R1_L7_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10714,10713,FPlace_R1_L7_S1_VP5,XPlace_R1_L7_S1_VP5) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP5 CONT Vel=12 % PPlace_R1_L7_S1_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP5
FDAT_ACT= FPlace_R1_L7_S1_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10715,10714,FPlace_R1_L7_S1_VP6,XPlace_R1_L7_S1_VP6) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP6 CONT Vel=12 % PPlace_R1_L7_S1_VP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP6
FDAT_ACT= FPlace_R1_L7_S1_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10716,10715,FPlace_R1_L7_S1_VP7,XPlace_R1_L7_S1_VP7) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP7 CONT Vel=12 % PPlace_R1_L7_S1_VP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP7
FDAT_ACT= FPlace_R1_L7_S1_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10717,10716,FPlace_R1_L7_S1_VP8,XPlace_R1_L7_S1_VP8) PRIO=-1
;FOLD PTP Place_R1_L7_S1_VP8 CONT Vel=12 % PPlace_R1_L7_S1_VP8 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S1_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_VP8
FDAT_ACT= FPlace_R1_L7_S1_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_VP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10718,10717,FPlace_R1_L7_S1_Check,XPlace_R1_L7_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L7_S1_Check Vel=12 % PPlace_R1_L7_S1_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_Check, 3:, 5:12, 7:PPlace_R1_L7_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_Check
FDAT_ACT= FPlace_R1_L7_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10719,10718,FPlace_R1_L7_S1_VP9,XPlace_R1_L7_S1_VP9) PRIO=-1
;FOLD LIN Place_R1_L7_S1_VP9 CONT Vel=0.5 m/s LPlace_R1_L7_S1_VP9 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S1_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S1_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S1_VP9
FDAT_ACT= FPlace_R1_L7_S1_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S1_VP9 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10720,10719,FPlace_R1_L7_S1_VP10,XPlace_R1_L7_S1_VP10) PRIO=-1
;FOLD LIN Place_R1_L7_S1_VP10 CONT Vel=0.5 m/s LPlace_R1_L7_S1_VP10 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S1_VP10, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S1_VP10
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S1_VP10
FDAT_ACT= FPlace_R1_L7_S1_VP10
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S1_VP10 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10721,10720,FPlace_R1_L7_S1_VP11,XPlace_R1_L7_S1_VP11) PRIO=-1
;FOLD LIN Place_R1_L7_S1_VP11 CONT Vel=0.5 m/s LPlace_R1_L7_S1_VP11 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S1_VP11, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S1_VP11
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S1_VP11
FDAT_ACT= FPlace_R1_L7_S1_VP11
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S1_VP11 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10722,10723,FPlace_R1_L7_S1_AP,XPlace_R1_L7_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L7_S1_AP Vel=0.2 m/s LPlace_R1_L7_S1_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L7_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S1_AP
FDAT_ACT= FPlace_R1_L7_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10723,10724,FPlace_R1_L7_S1_NP1,XPlace_R1_L7_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L7_S1_NP1 Vel=0.2 m/s LPlace_R1_L7_S1_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S1_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L7_S1_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S1_NP1
FDAT_ACT= FPlace_R1_L7_S1_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10724,10725,FPlace_R1_L7_S1_NP2,XPlace_R1_L7_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L7_S1_NP2 CONT Vel=0.5 m/s LPlace_R1_L7_S1_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S1_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S1_NP2
FDAT_ACT= FPlace_R1_L7_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S1_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10725,10726,FPlace_R1_L7_S1_NP3,XPlace_R1_L7_S1_NP3) PRIO=-1
;FOLD LIN Place_R1_L7_S1_NP3 Vel=0.5 m/s LPlace_R1_L7_S1_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S1_NP3, 3:, 5:0.5, 7:LPlace_R1_L7_S1_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S1_NP3
FDAT_ACT= FPlace_R1_L7_S1_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S1_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10726,10727,FPlace_R1_L7_S1_NP4,XPlace_R1_L7_S1_NP4) PRIO=-1
;FOLD PTP Place_R1_L7_S1_NP4 CONT Vel=100 % PPlace_R1_L7_S1_NP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S1_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_NP4
FDAT_ACT= FPlace_R1_L7_S1_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S1_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10727,10728,FPlace_R1_L7_S1_NP5,XPlace_R1_L7_S1_NP5) PRIO=-1
;FOLD PTP Place_R1_L7_S1_NP5 CONT Vel=100 % PPlace_R1_L7_S1_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S1_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_NP5
FDAT_ACT= FPlace_R1_L7_S1_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S1_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10728,10729,FPlace_R1_L7_S1_NP6,XPlace_R1_L7_S1_NP6) PRIO=-1
;FOLD PTP Place_R1_L7_S1_NP6 CONT Vel=100 % PPlace_R1_L7_S1_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S1_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_NP6
FDAT_ACT= FPlace_R1_L7_S1_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S1_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10729,10730,FPlace_R1_L7_S1_NP7,XPlace_R1_L7_S1_NP7) PRIO=-1
;FOLD PTP Place_R1_L7_S1_NP7 CONT Vel=100 % PPlace_R1_L7_S1_NP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S1_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S1_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S1_NP7
FDAT_ACT= FPlace_R1_L7_S1_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S1_NP7 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10730,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 7
RobAusStorage1_7_A73=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L7_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 7
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_7_A105=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_7_E73",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_7_A105=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_7_E73
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_7_A73=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10740,10501,FPlace_R1_L7_S2_VP1,XPlace_R1_L7_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP1 CONT Vel=12 % PPlace_R1_L7_S2_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP1
FDAT_ACT= FPlace_R1_L7_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10741,10740,FPlace_R1_L7_S2_VP2,XPlace_R1_L7_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP2 CONT Vel=12 % PPlace_R1_L7_S2_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP2
FDAT_ACT= FPlace_R1_L7_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10742,10741,FPlace_R1_L7_S2_VP3,XPlace_R1_L7_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP3 CONT Vel=12 % PPlace_R1_L7_S2_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP3
FDAT_ACT= FPlace_R1_L7_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10743,10742,FPlace_R1_L7_S2_VP4,XPlace_R1_L7_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP4 CONT Vel=12 % PPlace_R1_L7_S2_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP4
FDAT_ACT= FPlace_R1_L7_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10744,10743,FPlace_R1_L7_S2_VP5,XPlace_R1_L7_S2_VP5) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP5 CONT Vel=12 % PPlace_R1_L7_S2_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP5
FDAT_ACT= FPlace_R1_L7_S2_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10745,10744,FPlace_R1_L7_S2_VP6,XPlace_R1_L7_S2_VP6) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP6 CONT Vel=12 % PPlace_R1_L7_S2_VP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP6
FDAT_ACT= FPlace_R1_L7_S2_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10746,10745,FPlace_R1_L7_S2_VP7,XPlace_R1_L7_S2_VP7) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP7 CONT Vel=12 % PPlace_R1_L7_S2_VP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP7
FDAT_ACT= FPlace_R1_L7_S2_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10747,10746,FPlace_R1_L7_S2_VP8,XPlace_R1_L7_S2_VP8) PRIO=-1
;FOLD PTP Place_R1_L7_S2_VP8 CONT Vel=12 % PPlace_R1_L7_S2_VP8 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S2_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_VP8
FDAT_ACT= FPlace_R1_L7_S2_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_VP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10748,10747,FPlace_R1_L7_S2_Check,XPlace_R1_L7_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L7_S2_Check Vel=12 % PPlace_R1_L7_S2_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_Check, 3:, 5:12, 7:PPlace_R1_L7_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_Check
FDAT_ACT= FPlace_R1_L7_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10749,10748,FPlace_R1_L7_S2_VP9,XPlace_R1_L7_S2_VP9) PRIO=-1
;FOLD LIN Place_R1_L7_S2_VP9 CONT Vel=0.5 m/s LPlace_R1_L7_S2_VP9 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S2_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S2_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S2_VP9
FDAT_ACT= FPlace_R1_L7_S2_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S2_VP9 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10750,10749,FPlace_R1_L7_S2_VP10,XPlace_R1_L7_S2_VP10) PRIO=-1
;FOLD LIN Place_R1_L7_S2_VP10 CONT Vel=0.5 m/s LPlace_R1_L7_S2_VP10 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S2_VP10, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S2_VP10
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S2_VP10
FDAT_ACT= FPlace_R1_L7_S2_VP10
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S2_VP10 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10751,10750,FPlace_R1_L7_S2_VP11,XPlace_R1_L7_S2_VP11) PRIO=-1
;FOLD LIN Place_R1_L7_S2_VP11 CONT Vel=0.5 m/s LPlace_R1_L7_S2_VP11 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S2_VP11, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S2_VP11
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S2_VP11
FDAT_ACT= FPlace_R1_L7_S2_VP11
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S2_VP11 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10752,10751,FPlace_R1_L7_S2_VP12,XPlace_R1_L7_S2_VP12) PRIO=-1
;FOLD LIN Place_R1_L7_S2_VP12 CONT Vel=0.5 m/s LPlace_R1_L7_S2_VP12 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S2_VP12, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S2_VP12
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S2_VP12
FDAT_ACT= FPlace_R1_L7_S2_VP12
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S2_VP12 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10753,10754,FPlace_R1_L7_S2_AP,XPlace_R1_L7_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L7_S2_AP Vel=0.2 m/s LPlace_R1_L7_S2_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L7_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S2_AP
FDAT_ACT= FPlace_R1_L7_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10754,10755,FPlace_R1_L7_S2_NP1,XPlace_R1_L7_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L7_S2_NP1 Vel=0.2 m/s LPlace_R1_L7_S2_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S2_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L7_S2_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S2_NP1
FDAT_ACT= FPlace_R1_L7_S2_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10755,10756,FPlace_R1_L7_S2_NP2,XPlace_R1_L7_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L7_S2_NP2 Vel=0.5 m/s LPlace_R1_L7_S2_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S2_NP2, 3:, 5:0.5, 7:LPlace_R1_L7_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S2_NP2
FDAT_ACT= FPlace_R1_L7_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S2_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10756,10757,FPlace_R1_L7_S2_NP3,XPlace_R1_L7_S2_NP3) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP3 CONT Vel=33 % PPlace_R1_L7_S2_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP3, 3:C_DIS, 5:33, 7:PPlace_R1_L7_S2_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP3
FDAT_ACT= FPlace_R1_L7_S2_NP3
BAS(#PTP_PARAMS,33)
PTP XPlace_R1_L7_S2_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10757,10758,FPlace_R1_L7_S2_NP4,XPlace_R1_L7_S2_NP4) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP4 CONT Vel=33 % PPlace_R1_L7_S2_NP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP4, 3:C_DIS, 5:33, 7:PPlace_R1_L7_S2_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP4
FDAT_ACT= FPlace_R1_L7_S2_NP4
BAS(#PTP_PARAMS,33)
PTP XPlace_R1_L7_S2_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10758,10759,FPlace_R1_L7_S2_NP5,XPlace_R1_L7_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP5 CONT Vel=33 % PPlace_R1_L7_S2_NP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP5, 3:C_DIS, 5:33, 7:PPlace_R1_L7_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP5
FDAT_ACT= FPlace_R1_L7_S2_NP5
BAS(#PTP_PARAMS,33)
PTP XPlace_R1_L7_S2_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10759,10760,FPlace_R1_L7_S2_NP6,XPlace_R1_L7_S2_NP6) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP6 CONT Vel=33 % PPlace_R1_L7_S2_NP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP6, 3:C_DIS, 5:33, 7:PPlace_R1_L7_S2_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP6
FDAT_ACT= FPlace_R1_L7_S2_NP6
BAS(#PTP_PARAMS,33)
PTP XPlace_R1_L7_S2_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10760,10761,FPlace_R1_L7_S2_NP7,XPlace_R1_L7_S2_NP7) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP7 CONT Vel=100 % PPlace_R1_L7_S2_NP7 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S2_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP7
FDAT_ACT= FPlace_R1_L7_S2_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S2_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10761,10762,FPlace_R1_L7_S2_NP8,XPlace_R1_L7_S2_NP8) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP8 CONT Vel=100 % PPlace_R1_L7_S2_NP8 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S2_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP8
FDAT_ACT= FPlace_R1_L7_S2_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S2_NP8 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10762,10763,FPlace_R1_L7_S2_NP9,XPlace_R1_L7_S2_NP9) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP9 CONT Vel=100 % PPlace_R1_L7_S2_NP9 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP9, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S2_NP9
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP9
FDAT_ACT= FPlace_R1_L7_S2_NP9
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S2_NP9 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10763,10764,FPlace_R1_L7_S2_NP10,XPlace_R1_L7_S2_NP10) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP10 CONT Vel=100 % PPlace_R1_L7_S2_NP10 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP10, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S2_NP10
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP10
FDAT_ACT= FPlace_R1_L7_S2_NP10
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S2_NP10 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10764,10765,FPlace_R1_L7_S2_NP11,XPlace_R1_L7_S2_NP11) PRIO=-1
;FOLD PTP Place_R1_L7_S2_NP11 CONT Vel=100 % PPlace_R1_L7_S2_NP11 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S2_NP11, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S2_NP11
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S2_NP11
FDAT_ACT= FPlace_R1_L7_S2_NP11
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S2_NP11 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10765,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 7
RobAusStorage1_7_A73=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L7_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 7
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_7_A105=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_7_E73",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_7_A105=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_7_E73
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_7_A73=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10770,10501,FPlace_R1_L7_S3_VP1,XPlace_R1_L7_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L7_S3_VP1 CONT Vel=12 % PPlace_R1_L7_S3_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_VP1
FDAT_ACT= FPlace_R1_L7_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10771,10770,FPlace_R1_L7_S3_VP2,XPlace_R1_L7_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L7_S3_VP2 CONT Vel=12 % PPlace_R1_L7_S3_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_VP2
FDAT_ACT= FPlace_R1_L7_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S3_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10772,10771,FPlace_R1_L7_S3_VP3,XPlace_R1_L7_S3_VP3) PRIO=-1
;FOLD PTP Place_R1_L7_S3_VP3 CONT Vel=12 % PPlace_R1_L7_S3_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S3_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_VP3
FDAT_ACT= FPlace_R1_L7_S3_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S3_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10773,10772,FPlace_R1_L7_S3_VP4,XPlace_R1_L7_S3_VP4) PRIO=-1
;FOLD PTP Place_R1_L7_S3_VP4 CONT Vel=12 % PPlace_R1_L7_S3_VP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S3_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_VP4
FDAT_ACT= FPlace_R1_L7_S3_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S3_VP4 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10774,10773,FPlace_R1_L7_S3_Check,XPlace_R1_L7_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L7_S3_Check Vel=12 % PPlace_R1_L7_S3_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_Check, 3:, 5:12, 7:PPlace_R1_L7_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_Check
FDAT_ACT= FPlace_R1_L7_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10775,10774,FPlace_R1_L7_S3_VP5,XPlace_R1_L7_S3_VP5) PRIO=-1
;FOLD LIN Place_R1_L7_S3_VP5 CONT Vel=0.5 m/s LPlace_R1_L7_S3_VP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S3_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S3_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S3_VP5
FDAT_ACT= FPlace_R1_L7_S3_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S3_VP5 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10776,10775,FPlace_R1_L7_S3_VP6,XPlace_R1_L7_S3_VP6) PRIO=-1
;FOLD LIN Place_R1_L7_S3_VP6 CONT Vel=0.5 m/s LPlace_R1_L7_S3_VP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S3_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S3_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S3_VP6
FDAT_ACT= FPlace_R1_L7_S3_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S3_VP6 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10777,10776,FPlace_R1_L7_S3_VP7,XPlace_R1_L7_S3_VP7) PRIO=-1
;FOLD LIN Place_R1_L7_S3_VP7 CONT Vel=0.5 m/s LPlace_R1_L7_S3_VP7 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S3_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S3_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S3_VP7
FDAT_ACT= FPlace_R1_L7_S3_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S3_VP7 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10778,10777,FPlace_R1_L7_S3_VP8,XPlace_R1_L7_S3_VP8) PRIO=-1
;FOLD LIN Place_R1_L7_S3_VP8 CONT Vel=0.5 m/s LPlace_R1_L7_S3_VP8 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S3_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S3_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S3_VP8
FDAT_ACT= FPlace_R1_L7_S3_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S3_VP8 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10779,10780,FPlace_R1_L7_S3_AP,XPlace_R1_L7_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L7_S3_AP Vel=0.2 m/s LPlace_R1_L7_S3_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L7_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S3_AP
FDAT_ACT= FPlace_R1_L7_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10780,10781,FPlace_R1_L7_S3_NP1,XPlace_R1_L7_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L7_S3_NP1 Vel=0.2 m/s LPlace_R1_L7_S3_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L7_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S3_NP1
FDAT_ACT= FPlace_R1_L7_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10781,10782,FPlace_R1_L7_S3_NP2,XPlace_R1_L7_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L7_S3_NP2 Vel=0.5 m/s LPlace_R1_L7_S3_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S3_NP2, 3:, 5:0.5, 7:LPlace_R1_L7_S3_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S3_NP2
FDAT_ACT= FPlace_R1_L7_S3_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S3_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10782,10783,FPlace_R1_L7_S3_NP3,XPlace_R1_L7_S3_NP3) PRIO=-1
;FOLD PTP Place_R1_L7_S3_NP3 CONT Vel=33 % PPlace_R1_L7_S3_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_NP3, 3:C_DIS, 5:33, 7:PPlace_R1_L7_S3_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_NP3
FDAT_ACT= FPlace_R1_L7_S3_NP3
BAS(#PTP_PARAMS,33)
PTP XPlace_R1_L7_S3_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10783,10784,FPlace_R1_L7_S3_NP4,XPlace_R1_L7_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L7_S3_NP4 CONT Vel=33 % PPlace_R1_L7_S3_NP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_NP4, 3:C_DIS, 5:33, 7:PPlace_R1_L7_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_NP4
FDAT_ACT= FPlace_R1_L7_S3_NP4
BAS(#PTP_PARAMS,33)
PTP XPlace_R1_L7_S3_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10784,10785,FPlace_R1_L7_S3_NP5,XPlace_R1_L7_S3_NP5) PRIO=-1
;FOLD PTP Place_R1_L7_S3_NP5 CONT Vel=33 % PPlace_R1_L7_S3_NP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_NP5, 3:C_DIS, 5:33, 7:PPlace_R1_L7_S3_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_NP5
FDAT_ACT= FPlace_R1_L7_S3_NP5
BAS(#PTP_PARAMS,33)
PTP XPlace_R1_L7_S3_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10785,10786,FPlace_R1_L7_S3_NP6,XPlace_R1_L7_S3_NP6) PRIO=-1
;FOLD PTP Place_R1_L7_S3_NP6 CONT Vel=100 % PPlace_R1_L7_S3_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S3_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_NP6
FDAT_ACT= FPlace_R1_L7_S3_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S3_NP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10786,10787,FPlace_R1_L7_S3_NP7,XPlace_R1_L7_S3_NP7) PRIO=-1
;FOLD PTP Place_R1_L7_S3_NP7 CONT Vel=100 % PPlace_R1_L7_S3_NP7 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_NP7, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S3_NP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_NP7
FDAT_ACT= FPlace_R1_L7_S3_NP7
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S3_NP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10787,10788,FPlace_R1_L7_S3_NP8,XPlace_R1_L7_S3_NP8) PRIO=-1
;FOLD PTP Place_R1_L7_S3_NP8 CONT Vel=100 % PPlace_R1_L7_S3_NP8 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S3_NP8, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S3_NP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S3_NP8
FDAT_ACT= FPlace_R1_L7_S3_NP8
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S3_NP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10788,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 7
RobAusStorage1_7_A73=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L7_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 7
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_7_A105=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_7_E73",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_7_A105=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_7_E73
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_7_A73=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10800,10501,FPlace_R1_L7_S4_VP1,XPlace_R1_L7_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L7_S4_VP1 CONT Vel=12 % PPlace_R1_L7_S4_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S4_VP1
FDAT_ACT= FPlace_R1_L7_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10801,10800,FPlace_R1_L7_S4_VP2,XPlace_R1_L7_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L7_S4_VP2 CONT Vel=12 % PPlace_R1_L7_S4_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S4_VP2
FDAT_ACT= FPlace_R1_L7_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S4_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10802,10801,FPlace_R1_L7_S4_VP3,XPlace_R1_L7_S4_VP3) PRIO=-1
;FOLD PTP Place_R1_L7_S4_VP3 CONT Vel=12 % PPlace_R1_L7_S4_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S4_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L7_S4_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S4_VP3
FDAT_ACT= FPlace_R1_L7_S4_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S4_VP3 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10803,10802,FPlace_R1_L7_S4_Check,XPlace_R1_L7_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L7_S4_Check Vel=12 % PPlace_R1_L7_S4_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S4_Check, 3:, 5:12, 7:PPlace_R1_L7_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S4_Check
FDAT_ACT= FPlace_R1_L7_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L7_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10804,10803,FPlace_R1_L7_S4_VP4,XPlace_R1_L7_S4_VP4) PRIO=-1
;FOLD LIN Place_R1_L7_S4_VP4 CONT Vel=0.5 m/s LPlace_R1_L7_S4_VP4 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S4_VP4, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S4_VP4
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S4_VP4
FDAT_ACT= FPlace_R1_L7_S4_VP4
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S4_VP4 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10805,10804,FPlace_R1_L7_S4_VP5,XPlace_R1_L7_S4_VP5) PRIO=-1
;FOLD LIN Place_R1_L7_S4_VP5 CONT Vel=0.5 m/s LPlace_R1_L7_S4_VP5 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S4_VP5, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S4_VP5
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S4_VP5
FDAT_ACT= FPlace_R1_L7_S4_VP5
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S4_VP5 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10806,10805,FPlace_R1_L7_S4_VP6,XPlace_R1_L7_S4_VP6) PRIO=-1
;FOLD LIN Place_R1_L7_S4_VP6 CONT Vel=0.5 m/s LPlace_R1_L7_S4_VP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S4_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S4_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S4_VP6
FDAT_ACT= FPlace_R1_L7_S4_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S4_VP6 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10807,10808,FPlace_R1_L7_S4_AP,XPlace_R1_L7_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L7_S4_AP Vel=0.2 m/s LPlace_R1_L7_S4_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L7_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S4_AP
FDAT_ACT= FPlace_R1_L7_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10808,10809,FPlace_R1_L7_S4_NP1,XPlace_R1_L7_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L7_S4_NP1 Vel=0.2 m/s LPlace_R1_L7_S4_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S4_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L7_S4_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S4_NP1
FDAT_ACT= FPlace_R1_L7_S4_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L7_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10809,10810,FPlace_R1_L7_S4_NP2,XPlace_R1_L7_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L7_S4_NP2 CONT Vel=0.5 m/s LPlace_R1_L7_S4_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S4_NP2, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L7_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S4_NP2
FDAT_ACT= FPlace_R1_L7_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S4_NP2 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10810,10811,FPlace_R1_L7_S4_NP3,XPlace_R1_L7_S4_NP3) PRIO=-1
;FOLD LIN Place_R1_L7_S4_NP3 Vel=0.5 m/s LPlace_R1_L7_S4_NP3 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L7_S4_NP3, 3:, 5:0.5, 7:LPlace_R1_L7_S4_NP3
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L7_S4_NP3
FDAT_ACT= FPlace_R1_L7_S4_NP3
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L7_S4_NP3
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10811,10812,FPlace_R1_L7_S4_NP4,XPlace_R1_L7_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L7_S4_NP4 CONT Vel=100 % PPlace_R1_L7_S4_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S4_NP4
FDAT_ACT= FPlace_R1_L7_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S4_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10812,10813,FPlace_R1_L7_S4_NP5,XPlace_R1_L7_S4_NP5) PRIO=-1
;FOLD PTP Place_R1_L7_S4_NP5 CONT Vel=100 % PPlace_R1_L7_S4_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S4_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S4_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S4_NP5
FDAT_ACT= FPlace_R1_L7_S4_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S4_NP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10813,10814,FPlace_R1_L7_S4_NP6,XPlace_R1_L7_S4_NP6) PRIO=-1
;FOLD PTP Place_R1_L7_S4_NP6 CONT Vel=100 % PPlace_R1_L7_S4_NP6 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L7_S4_NP6, 3:C_DIS, 5:100, 7:PPlace_R1_L7_S4_NP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L7_S4_NP6
FDAT_ACT= FPlace_R1_L7_S4_NP6
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L7_S4_NP6 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10814,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 7
RobAusStorage1_7_A73=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L8_S1( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 8
;    Shelf 1
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_8_A106=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_8_E74",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_8_A106=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_8_E74
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_8_A74=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10820,10501,FPlace_R1_L8_S1_VP1,XPlace_R1_L8_S1_VP1) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP1 CONT Vel=12 % PPlace_R1_L8_S1_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP1
FDAT_ACT= FPlace_R1_L8_S1_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10821,10820,FPlace_R1_L8_S1_VP2,XPlace_R1_L8_S1_VP2) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP2 CONT Vel=12 % PPlace_R1_L8_S1_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP2
FDAT_ACT= FPlace_R1_L8_S1_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10822,10821,FPlace_R1_L8_S1_VP3,XPlace_R1_L8_S1_VP3) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP3 CONT Vel=12 % PPlace_R1_L8_S1_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP3
FDAT_ACT= FPlace_R1_L8_S1_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10823,10822,FPlace_R1_L8_S1_VP4,XPlace_R1_L8_S1_VP4) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP4 CONT Vel=12 % PPlace_R1_L8_S1_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP4
FDAT_ACT= FPlace_R1_L8_S1_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10824,10823,FPlace_R1_L8_S1_VP5,XPlace_R1_L8_S1_VP5) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP5 CONT Vel=12 % PPlace_R1_L8_S1_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP5
FDAT_ACT= FPlace_R1_L8_S1_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10825,10824,FPlace_R1_L8_S1_VP6,XPlace_R1_L8_S1_VP6) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP6 CONT Vel=12 % PPlace_R1_L8_S1_VP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP6
FDAT_ACT= FPlace_R1_L8_S1_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10826,10825,FPlace_R1_L8_S1_VP7,XPlace_R1_L8_S1_VP7) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP7 CONT Vel=12 % PPlace_R1_L8_S1_VP7 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP7
FDAT_ACT= FPlace_R1_L8_S1_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP7 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10827,10826,FPlace_R1_L8_S1_VP8,XPlace_R1_L8_S1_VP8) PRIO=-1
;FOLD PTP Place_R1_L8_S1_VP8 CONT Vel=12 % PPlace_R1_L8_S1_VP8 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_VP8, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S1_VP8
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_VP8
FDAT_ACT= FPlace_R1_L8_S1_VP8
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_VP8 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10828,10827,FPlace_R1_L8_S1_Check,XPlace_R1_L8_S1_Check) PRIO=-1
;FOLD PTP Place_R1_L8_S1_Check Vel=12 % PPlace_R1_L8_S1_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_Check, 3:, 5:12, 7:PPlace_R1_L8_S1_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_Check
FDAT_ACT= FPlace_R1_L8_S1_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S1_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10829,10828,FPlace_R1_L8_S1_VP9,XPlace_R1_L8_S1_VP9) PRIO=-1
;FOLD LIN Place_R1_L8_S1_VP9 CONT Vel=0.5 m/s LPlace_R1_L8_S1_VP9 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S1_VP9, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L8_S1_VP9
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S1_VP9
FDAT_ACT= FPlace_R1_L8_S1_VP9
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S1_VP9 C_DIS C_DIS
;ENDFOLD

;***************************************************
;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10830,10831,FPlace_R1_L8_S1_AP,XPlace_R1_L8_S1_AP) PRIO=-1
;FOLD LIN Place_R1_L8_S1_AP Vel=0.2 m/s LPlace_R1_L8_S1_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S1_AP, 3:, 5:0.2, 7:LPlace_R1_L8_S1_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S1_AP
FDAT_ACT= FPlace_R1_L8_S1_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S1_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10831,10832,FPlace_R1_L8_S1_NP1,XPlace_R1_L8_S1_NP1) PRIO=-1
;FOLD LIN Place_R1_L8_S1_NP1 Vel=0.2 m/s LPlace_R1_L8_S1_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S1_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L8_S1_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S1_NP1
FDAT_ACT= FPlace_R1_L8_S1_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S1_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10832,10833,FPlace_R1_L8_S1_NP2,XPlace_R1_L8_S1_NP2) PRIO=-1
;FOLD LIN Place_R1_L8_S1_NP2 Vel=0.5 m/s LPlace_R1_L8_S1_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S1_NP2, 3:, 5:0.5, 7:LPlace_R1_L8_S1_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S1_NP2
FDAT_ACT= FPlace_R1_L8_S1_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S1_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10833,10834,FPlace_R1_L8_S1_NP3,XPlace_R1_L8_S1_NP3) PRIO=-1
;FOLD PTP Place_R1_L8_S1_NP3 CONT Vel=100 % PPlace_R1_L8_S1_NP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S1_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_NP3
FDAT_ACT= FPlace_R1_L8_S1_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S1_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10834,10835,FPlace_R1_L8_S1_NP4,XPlace_R1_L8_S1_NP4) PRIO=-1
;FOLD PTP Place_R1_L8_S1_NP4 CONT Vel=100 % PPlace_R1_L8_S1_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S1_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S1_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S1_NP4
FDAT_ACT= FPlace_R1_L8_S1_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S1_NP4 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10835,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 8
RobAusStorage1_8_A74=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L8_S2( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 8
;    Shelf 2
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_8_A106=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_8_E74",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_8_A106=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_8_E74
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_8_A74=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10840,10501,FPlace_R1_L8_S2_VP1,XPlace_R1_L8_S2_VP1) PRIO=-1
;FOLD PTP Place_R1_L8_S2_VP1 CONT Vel=12 % PPlace_R1_L8_S2_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S2_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_VP1
FDAT_ACT= FPlace_R1_L8_S2_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10841,10840,FPlace_R1_L8_S2_VP2,XPlace_R1_L8_S2_VP2) PRIO=-1
;FOLD PTP Place_R1_L8_S2_VP2 CONT Vel=12 % PPlace_R1_L8_S2_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S2_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_VP2
FDAT_ACT= FPlace_R1_L8_S2_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10842,10841,FPlace_R1_L8_S2_VP3,XPlace_R1_L8_S2_VP3) PRIO=-1
;FOLD PTP Place_R1_L8_S2_VP3 CONT Vel=12 % PPlace_R1_L8_S2_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S2_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_VP3
FDAT_ACT= FPlace_R1_L8_S2_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10843,10842,FPlace_R1_L8_S2_VP4,XPlace_R1_L8_S2_VP4) PRIO=-1
;FOLD PTP Place_R1_L8_S2_VP4 CONT Vel=12 % PPlace_R1_L8_S2_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S2_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_VP4
FDAT_ACT= FPlace_R1_L8_S2_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10844,10843,FPlace_R1_L8_S2_VP5,XPlace_R1_L8_S2_VP5) PRIO=-1
;FOLD PTP Place_R1_L8_S2_VP5 CONT Vel=12 % PPlace_R1_L8_S2_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S2_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_VP5
FDAT_ACT= FPlace_R1_L8_S2_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_VP5 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10845,10844,FPlace_R1_L8_S2_VP6,XPlace_R1_L8_S2_VP6) PRIO=-1
;FOLD PTP Place_R1_L8_S2_VP6 CONT Vel=12 % PPlace_R1_L8_S2_VP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_VP6, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S2_VP6
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_VP6
FDAT_ACT= FPlace_R1_L8_S2_VP6
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_VP6 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10846,10845,FPlace_R1_L8_S2_VP7,XPlace_R1_L8_S2_VP7) PRIO=-1
;FOLD PTP Place_R1_L8_S2_VP7 CONT Vel=12 % PPlace_R1_L8_S2_VP7 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_VP7, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S2_VP7
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_VP7
FDAT_ACT= FPlace_R1_L8_S2_VP7
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_VP7 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10847,10846,FPlace_R1_L8_S2_Check,XPlace_R1_L8_S2_Check) PRIO=-1
;FOLD PTP Place_R1_L8_S2_Check Vel=12 % PPlace_R1_L8_S2_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_Check, 3:, 5:12, 7:PPlace_R1_L8_S2_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_Check
FDAT_ACT= FPlace_R1_L8_S2_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S2_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10848,10847,FPlace_R1_L8_S2_VP8,XPlace_R1_L8_S2_VP8) PRIO=-1
;FOLD LIN Place_R1_L8_S2_VP8 CONT Vel=0.5 m/s LPlace_R1_L8_S2_VP8 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S2_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L8_S2_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S2_VP8
FDAT_ACT= FPlace_R1_L8_S2_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S2_VP8 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10849,10850,FPlace_R1_L8_S2_AP,XPlace_R1_L8_S2_AP) PRIO=-1
;FOLD LIN Place_R1_L8_S2_AP Vel=0.2 m/s LPlace_R1_L8_S2_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S2_AP, 3:, 5:0.2, 7:LPlace_R1_L8_S2_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S2_AP
FDAT_ACT= FPlace_R1_L8_S2_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S2_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10850,10851,FPlace_R1_L8_S2_NP1,XPlace_R1_L8_S2_NP1) PRIO=-1
;FOLD LIN Place_R1_L8_S2_NP1 Vel=0.2 m/s LPlace_R1_L8_S2_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S2_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L8_S2_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S2_NP1
FDAT_ACT= FPlace_R1_L8_S2_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S2_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10851,10852,FPlace_R1_L8_S2_NP2,XPlace_R1_L8_S2_NP2) PRIO=-1
;FOLD LIN Place_R1_L8_S2_NP2 Vel=0.5 m/s LPlace_R1_L8_S2_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S2_NP2, 3:, 5:0.5, 7:LPlace_R1_L8_S2_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S2_NP2
FDAT_ACT= FPlace_R1_L8_S2_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S2_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10852,10853,FPlace_R1_L8_S2_NP3,XPlace_R1_L8_S2_NP3) PRIO=-1
;FOLD PTP Place_R1_L8_S2_NP3 CONT Vel=100 % PPlace_R1_L8_S2_NP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S2_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_NP3
FDAT_ACT= FPlace_R1_L8_S2_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S2_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10853,10854,FPlace_R1_L8_S2_NP4,XPlace_R1_L8_S2_NP4) PRIO=-1
;FOLD PTP Place_R1_L8_S2_NP4 CONT Vel=100 % PPlace_R1_L8_S2_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S2_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_NP4
FDAT_ACT= FPlace_R1_L8_S2_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S2_NP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10854,10855,FPlace_R1_L8_S2_NP5,XPlace_R1_L8_S2_NP5) PRIO=-1
;FOLD PTP Place_R1_L8_S2_NP5 CONT Vel=100 % PPlace_R1_L8_S2_NP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S2_NP5, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S2_NP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S2_NP5
FDAT_ACT= FPlace_R1_L8_S2_NP5
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S2_NP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10855,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 8
RobAusStorage1_8_A74=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L8_S3( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 8
;    Shelf 3
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_8_A106=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_8_E74",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_8_A106=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_8_E74
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_8_A74=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10860,10501,FPlace_R1_L8_S3_VP1,XPlace_R1_L8_S3_VP1) PRIO=-1
;FOLD PTP Place_R1_L8_S3_VP1 CONT Vel=12 % PPlace_R1_L8_S3_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S3_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_VP1
FDAT_ACT= FPlace_R1_L8_S3_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S3_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10861,10860,FPlace_R1_L8_S3_VP2,XPlace_R1_L8_S3_VP2) PRIO=-1
;FOLD PTP Place_R1_L8_S3_VP2 CONT Vel=12 % PPlace_R1_L8_S3_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S3_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_VP2
FDAT_ACT= FPlace_R1_L8_S3_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S3_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10862,10861,FPlace_R1_L8_S3_VP3,XPlace_R1_L8_S3_VP3) PRIO=-1
;FOLD PTP Place_R1_L8_S3_VP3 CONT Vel=12 % PPlace_R1_L8_S3_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S3_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_VP3
FDAT_ACT= FPlace_R1_L8_S3_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S3_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10863,10862,FPlace_R1_L8_S3_VP4,XPlace_R1_L8_S3_VP4) PRIO=-1
;FOLD PTP Place_R1_L8_S3_VP4 CONT Vel=12 % PPlace_R1_L8_S3_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S3_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_VP4
FDAT_ACT= FPlace_R1_L8_S3_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S3_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10864,10863,FPlace_R1_L8_S3_VP5,XPlace_R1_L8_S3_VP5) PRIO=-1
;FOLD PTP Place_R1_L8_S3_VP5 CONT Vel=12 % PPlace_R1_L8_S3_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S3_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_VP5
FDAT_ACT= FPlace_R1_L8_S3_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S3_VP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10865,10864,FPlace_R1_L8_S3_Check,XPlace_R1_L8_S3_Check) PRIO=-1
;FOLD PTP Place_R1_L8_S3_Check Vel=12 % PPlace_R1_L8_S3_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_Check, 3:, 5:12, 7:PPlace_R1_L8_S3_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_Check
FDAT_ACT= FPlace_R1_L8_S3_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S3_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10866,10865,FPlace_R1_L8_S3_VP6,XPlace_R1_L8_S3_VP6) PRIO=-1
;FOLD LIN Place_R1_L8_S3_VP6 CONT Vel=0.5 m/s LPlace_R1_L8_S3_VP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S3_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L8_S3_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S3_VP6
FDAT_ACT= FPlace_R1_L8_S3_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S3_VP6 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10867,10866,FPlace_R1_L8_S3_VP7,XPlace_R1_L8_S3_VP7) PRIO=-1
;FOLD LIN Place_R1_L8_S3_VP7 CONT Vel=0.5 m/s LPlace_R1_L8_S3_VP7 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S3_VP7, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L8_S3_VP7
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S3_VP7
FDAT_ACT= FPlace_R1_L8_S3_VP7
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S3_VP7 C_DIS C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10868,10867,FPlace_R1_L8_S3_VP8,XPlace_R1_L8_S3_VP8) PRIO=-1
;FOLD LIN Place_R1_L8_S3_VP8 CONT Vel=0.5 m/s LPlace_R1_L8_S3_VP8 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S3_VP8, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L8_S3_VP8
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S3_VP8
FDAT_ACT= FPlace_R1_L8_S3_VP8
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S3_VP8 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10869,10870,FPlace_R1_L8_S3_AP,XPlace_R1_L8_S3_AP) PRIO=-1
;FOLD LIN Place_R1_L8_S3_AP Vel=0.2 m/s LPlace_R1_L8_S3_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S3_AP, 3:, 5:0.2, 7:LPlace_R1_L8_S3_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S3_AP
FDAT_ACT= FPlace_R1_L8_S3_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S3_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10870,10871,FPlace_R1_L8_S3_NP1,XPlace_R1_L8_S3_NP1) PRIO=-1
;FOLD LIN Place_R1_L8_S3_NP1 Vel=0.2 m/s LPlace_R1_L8_S3_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S3_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L8_S3_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S3_NP1
FDAT_ACT= FPlace_R1_L8_S3_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S3_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10871,10872,FPlace_R1_L8_S3_NP2,XPlace_R1_L8_S3_NP2) PRIO=-1
;FOLD LIN Place_R1_L8_S3_NP2 Vel=0.5 m/s LPlace_R1_L8_S3_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S3_NP2, 3:, 5:0.5, 7:LPlace_R1_L8_S3_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S3_NP2
FDAT_ACT= FPlace_R1_L8_S3_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S3_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10872,10873,FPlace_R1_L8_S3_NP3,XPlace_R1_L8_S3_NP3) PRIO=-1
;FOLD PTP Place_R1_L8_S3_NP3 CONT Vel=100 % PPlace_R1_L8_S3_NP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S3_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_NP3
FDAT_ACT= FPlace_R1_L8_S3_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S3_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10873,10874,FPlace_R1_L8_S3_NP4,XPlace_R1_L8_S3_NP4) PRIO=-1
;FOLD PTP Place_R1_L8_S3_NP4 CONT Vel=100 % PPlace_R1_L8_S3_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S3_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S3_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S3_NP4
FDAT_ACT= FPlace_R1_L8_S3_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S3_NP4 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10874,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 8
RobAusStorage1_8_A74=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

; ##################################################

GLOBAL DEF UP_Place_R1_L8_S4( )
;***************************************************
; Place part on:
;    Rack  1
;    Level 8
;    Shelf 4
;***************************************************
;FOLD Preconditions - Vorraussetzungen
;***************************************************
; Enable collision detection
;FOLD COLLDETECT SetLimits Axis1: 150 % Axis2: 200 % Axis3: 150 % Axis4: 200 % Axis5: 150 % Axis6: 150 % ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.setlimits; CollDetect.Command=SetLimits; CollDetect.Axis1=150; CollDetect.Axis2=200; CollDetect.Axis3=150; CollDetect.Axis4=200; CollDetect.Axis5=150; CollDetect.Axis6=150
;ENDFOLD
SET_TQ_VALUES(150, 200, 150, 200, 150, 150)
;ENDFOLD
;***************************************************
; Check for part in gripper (tool 1).
CheckPartPresent(OCCUPIED_GRIPPER,PART_ON_TOOL_1)
;***************************************************
; Enable part lost detection for tool 1
SetPartLostDetection(PART_ON_TOOL_1)
;***************************************************
; Set load data.
SetLoadData( )
;***************************************************
; Robot has to start from home position.
IF NOT $IN_HOME THEN
  UP_HomeToHome(0)
ENDIF
;***************************************************
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10501,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=12 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:12, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,12)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Area clearence handshake.
IF NOT $FLAG[M_Inbetriebnahme] THEN
  ;-------------------------------------------------
  ; Request area clearence.
  AnfStoer_Store1_8_A106=SET_REQUEST
  ;-------------------------------------------------
  ; Wait for area clearence from PLC.
  WAIT_FOR_INPUT("Frg_Storage1_8_E74",TRUE)
  ;-------------------------------------------------
  ; Reset area clearence request.
  AnfStoer_Store1_8_A106=RESET_REQUEST
  ;-------------------------------------------------
  ; start cyclic clearence check
  $CYCFLAG[ciFreigabeSPS]=Frg_Storage1_8_E74
  ;-------------------------------------------------
ENDIF
;***************************************************
; set "robot in area"
RobAusStorage1_8_A74=SET_IN_AREA
;ENDFOLD
;***************************************************

;***************************************************
;FOLD Check for Teachmode
IF $FLAG[M_Teachen] THEN
  WAIT FOR $T1
ENDIF
;ENDFOLD
;***************************************************

; move to the rack
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10880,10501,FPlace_R1_L8_S4_VP1,XPlace_R1_L8_S4_VP1) PRIO=-1
;FOLD PTP Place_R1_L8_S4_VP1 CONT Vel=12 % PPlace_R1_L8_S4_VP1 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_VP1, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S4_VP1
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_VP1
FDAT_ACT= FPlace_R1_L8_S4_VP1
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S4_VP1 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10881,10880,FPlace_R1_L8_S4_VP2,XPlace_R1_L8_S4_VP2) PRIO=-1
;FOLD PTP Place_R1_L8_S4_VP2 CONT Vel=12 % PPlace_R1_L8_S4_VP2 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_VP2, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S4_VP2
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_VP2
FDAT_ACT= FPlace_R1_L8_S4_VP2
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S4_VP2 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10882,10881,FPlace_R1_L8_S4_VP3,XPlace_R1_L8_S4_VP3) PRIO=-1
;FOLD PTP Place_R1_L8_S4_VP3 CONT Vel=12 % PPlace_R1_L8_S4_VP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_VP3, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S4_VP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_VP3
FDAT_ACT= FPlace_R1_L8_S4_VP3
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S4_VP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10883,10882,FPlace_R1_L8_S4_VP4,XPlace_R1_L8_S4_VP4) PRIO=-1
;FOLD PTP Place_R1_L8_S4_VP4 CONT Vel=12 % PPlace_R1_L8_S4_VP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_VP4, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S4_VP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_VP4
FDAT_ACT= FPlace_R1_L8_S4_VP4
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S4_VP4 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10884,10883,FPlace_R1_L8_S4_VP5,XPlace_R1_L8_S4_VP5) PRIO=-1
;FOLD PTP Place_R1_L8_S4_VP5 CONT Vel=12 % PPlace_R1_L8_S4_VP5 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_VP5, 3:C_DIS, 5:12, 7:PPlace_R1_L8_S4_VP5
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_VP5
FDAT_ACT= FPlace_R1_L8_S4_VP5
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S4_VP5 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10885,10884,FPlace_R1_L8_S4_Check,XPlace_R1_L8_S4_Check) PRIO=-1
;FOLD PTP Place_R1_L8_S4_Check Vel=12 % PPlace_R1_L8_S4_Check Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_Check, 3:, 5:12, 7:PPlace_R1_L8_S4_Check
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_Check
FDAT_ACT= FPlace_R1_L8_S4_Check
BAS(#PTP_PARAMS,12)
PTP XPlace_R1_L8_S4_Check
;ENDFOLD

;***************************************************
;FOLD Pruefe Platz frei
IF (DetectPart(CHECK_SHELF,PLACE)==OCCUPIED) THEN
  UP_Rueckzug_R1Place( )
  RETURN
ENDIF
;ENDFOLD
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10886,10885,FPlace_R1_L8_S4_VP6,XPlace_R1_L8_S4_VP6) PRIO=-1
;FOLD LIN Place_R1_L8_S4_VP6 CONT Vel=0.5 m/s LPlace_R1_L8_S4_VP6 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S4_VP6, 3:C_DIS C_DIS, 5:0.5, 7:LPlace_R1_L8_S4_VP6
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S4_VP6
FDAT_ACT= FPlace_R1_L8_S4_VP6
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S4_VP6 C_DIS C_DIS
;ENDFOLD

;FOLD Test the way back home - part 1
CONTINUE
IF ($FLAG[M_Test_GrdstFahren1] AND NOT $FLAG[M_Test_GrdstFahren2]) THEN
  $FLAG[M_Test_GrdstFahren2]=TRUE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;-------------------------------
; Place part position
;-------------------------------
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10887,10888,FPlace_R1_L8_S4_AP,XPlace_R1_L8_S4_AP) PRIO=-1
;FOLD LIN Place_R1_L8_S4_AP Vel=0.2 m/s LPlace_R1_L8_S4_AP Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S4_AP, 3:, 5:0.2, 7:LPlace_R1_L8_S4_AP
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S4_AP
FDAT_ACT= FPlace_R1_L8_S4_AP
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S4_AP
;ENDFOLD

;FOLD Test the way back home - part 2
CONTINUE
IF $FLAG[M_Test_GrdstFahren2] THEN
  $FLAG[M_Test_GrdstFahren2]=FALSE
  UP_Rueckzug( )
  RETURN
ENDIF
;ENDFOLD

;***************************************************
; Disable part lost detection
SetPartLostDetection(NO_PART)
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10888,10889,FPlace_R1_L8_S4_NP1,XPlace_R1_L8_S4_NP1) PRIO=-1
;FOLD LIN Place_R1_L8_S4_NP1 Vel=0.2 m/s LPlace_R1_L8_S4_NP1 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S4_NP1, 3:C_DIS C_DIS, 5:0.2, 7:LPlace_R1_L8_S4_NP1
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S4_NP1
FDAT_ACT= FPlace_R1_L8_S4_NP1
BAS(#CP_PARAMS,0.2)
LIN XPlace_R1_L8_S4_NP1
;ENDFOLD

;***************************************************
; Check for part present (empty gripper)
CheckPartPresent(EMPTY_GRIPPER)
;***************************************************
; set load data
SetLoadData( )
;***************************************************

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10889,10890,FPlace_R1_L8_S4_NP2,XPlace_R1_L8_S4_NP2) PRIO=-1
;FOLD LIN Place_R1_L8_S4_NP2 Vel=0.5 m/s LPlace_R1_L8_S4_NP2 Tool[1]:Upper Gripper Base[1]:Rack1;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:Place_R1_L8_S4_NP2, 3:, 5:0.5, 7:LPlace_R1_L8_S4_NP2
$BWDSTART=FALSE
LDAT_ACT= LLPlace_R1_L8_S4_NP2
FDAT_ACT= FPlace_R1_L8_S4_NP2
BAS(#CP_PARAMS,0.5)
LIN XPlace_R1_L8_S4_NP2
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10890,10891,FPlace_R1_L8_S4_NP3,XPlace_R1_L8_S4_NP3) PRIO=-1
;FOLD PTP Place_R1_L8_S4_NP3 CONT Vel=100 % PPlace_R1_L8_S4_NP3 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_NP3, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S4_NP3
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_NP3
FDAT_ACT= FPlace_R1_L8_S4_NP3
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S4_NP3 C_DIS
;ENDFOLD
TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10891,10892,FPlace_R1_L8_S4_NP4,XPlace_R1_L8_S4_NP4) PRIO=-1
;FOLD PTP Place_R1_L8_S4_NP4 CONT Vel=100 % PPlace_R1_L8_S4_NP4 Tool[1]:Upper Gripper Base[0];%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:Place_R1_L8_S4_NP4, 3:C_DIS, 5:100, 7:PPlace_R1_L8_S4_NP4
$BWDSTART=FALSE
PDAT_ACT= PPPlace_R1_L8_S4_NP4
FDAT_ACT= FPlace_R1_L8_S4_NP4
BAS(#PTP_PARAMS,100)
PTP XPlace_R1_L8_S4_NP4 C_DIS
;ENDFOLD

TRIGGER WHEN DISTANCE=1 DELAY=-1 DO Schrittmerker_R1Place(10892,10501,FHOME,$nullframe,XHOME) PRIO=-1
;FOLD PTP HOME Vel=100 % PHome;%{PE}%R8.3.21,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:PHome
$BWDSTART=FALSE
PDAT_ACT= PPHome
FDAT_ACT= FHOME
BAS(#PTP_PARAMS,100)
PTP XHOME
;ENDFOLD

;***************************************************
;FOLD Final tasks.
; Robot out of area Rack 1 Level 8
RobAusStorage1_8_A74=RESET_IN_AREA
;***************************************************
; stop cyclic clearence check
$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING
;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************
;ENDFOLD
;***************************************************

END

;###################################################

GLOBAL Def Schrittmerker_R1Place(iMyActPosNo:IN,iMyNextPosNo:IN,fdatMyFDAT:IN,posMyE6POS:IN,axisMyE6AXIS:IN)
INT iMyActPosNo
INT iMyNextPosNo
DECL FDAT fdatMyFDAT
E6POS posMyE6POS
E6AXIS axisMyE6AXIS

iActPosNo = iMyActPosNo
iMyActPosNo = iMyActPosNo - R1_PLACE

CONTINUE
IF NOT(VARSTATE("axisMyE6AXIS") == #INITIALIZED) THEN
  axisMyE6AXIS = {A1 999,A2 999,A3 999,A4 999,A5 999,A6 999,E1 999,E2 999,E3 999,E4 999,E5 999,E6 999}
ENDIF

posRueckzugE6POS[iMyActPosNo] = posMyE6POS
axisRueckzugE6AXIS[iMyActPosNo] = axisMyE6AXIS
iBaseNo[iMyActPosNo] = fdatMyFDAT.BASE_NO
iToolNo[iMyActPosNo] = fdatMyFDAT.TOOL_NO
iNextPosNo[iMyActPosNo] = iMyNextPosNo

CONTINUE
IF ($MOVE_STATE == #PTP_SINGLE) OR ($MOVE_STATE == #PTP_AP01) OR ($MOVE_STATE == #PTP_AP02) THEN
  iMoveTyp[iMyActPosNo]=ciMovePTP
ELSE
  CONTINUE
  IF ($MOVE_STATE == #LIN_SINGLE) OR ($MOVE_STATE == #LIN_AP01) OR ($MOVE_STATE == #LIN_AP02) THEN
    iMoveTyp[iMyActPosNo] = ciMoveLIN
  ELSE
    iMoveTyp[iMyActPosNo] = ciMoveNull
  ENDIF ;($MOVE_STATE==LIN_SINGLE) OR ($MOVE_STATE==LIN_AP01) OR ($MOVE_STATE==LIN_AP02)
ENDIF ;($MOVE_STATE==PTP_SINGLE) OR ($MOVE_STATE==PTP_AP01) OR ($MOVE_STATE==PTP_AP02)

END ;Schrittmerker

;###################################################

GLOBAL DEF UP_Rueckzug_R1Place( )

INT iMyRichtung
INT iMyBereich
INT iMyBereichEnd
INT iMyActPosNo

IRQ4_GND_UP_OFF( )
IRQ5_GND_HP_OFF( )
ZurGrundstFahren_A50=TRUE

iMyBereich = R1_PLACE
iMyBereichEnd = R1_PLACE_END
iMyActPosNo = iActPosNo - iMyBereich

;***************************************************
; Move forewards or backwards?
; Vorwaerts oder rueckwerts fahren?
IF iNextPosNo[iMyActPosNo] > (iActPosNo) THEN
  iMyActPosNo = iNextPosNo[iMyActPosNo] - iMyBereich
  iMyRichtung = ciForward
ELSE
  iMyRichtung = ciBackwards
ENDIF
;***************************************************

REPEAT
  IF (iActPosNo < iMyBereich) OR (iActPosNo > iMyBereichEnd) THEN
    ;***********************************************
    ;          Position ungueltig
    ;  Roboter in T1 in Grundstellung fahren
    ;      Fehler bei Grundstellungsfahrt
    ;        Unbekannter Schrittzaehler
    ErrorHandler(30,#Stoerung)
    ;***********************************************
  ENDIF

  ;*************************************************
  ; Set part lost detection
  ; Check for part present
  SWITCH iActPosNo
  CASE 10013,10034,10054,10074,10095,10120,10137,10158,10178,10197,10218,10238,10261,10278,10297,10316
    SetPartLostDetection(NO_PART)
  CASE 10014,10035,10055,10075,10096,10121,10138,10159,10179,10198,10219,10239,10262,10279,10298,10317
    CheckPartPresent(EMPTY_GRIPPER)
  CASE 10522,10553,10577,10596,10622,10652,10676,10696,10722,10753,10779,10807,10830,10849,10869,10887
    SetPartLostDetection(NO_PART)
  CASE 10523,10554,10578,10597,10623,10653,10677,10697,10723,10754,10780,10808,10831,10850,10870,10888
    CheckPartPresent(EMPTY_GRIPPER)
  ENDSWITCH
  ;*************************************************

  UP_Rueckzug_MoveParam( )

  IF (axisRueckzugE6AXIS[iMyActPosNo].A1 <= $SOFTP_END[1]) THEN
    ;***********************************************
    ; Position is a E6AXIS
    PTP axisRueckzugE6AXIS[iMyActPosNo]
    ;***********************************************
  ELSE
    ;***********************************************
    ; Position is a E6POS
    ;***********************************************
    ; Tool/Base setzen
    IF (iToolNo[iMyActPosNo] == 0) THEN
      $TOOL = $nullframe
    ELSE
      $TOOL = TOOL_DATA[iToolNo[iMyActPosNo]]
    ENDIF
    IF (iBaseNo[iMyActPosNo] == 0) THEN
      $BASE = $nullframe
    ELSE
      $BASE = BASE_DATA[iBaseNo[iMyActPosNo]]
    ENDIF
    ;***********************************************
    ; LIN oder PTP fahren
    ; Koordinaten 0, 0, 0, 0, 0, 0 gelten als ungueltig
    IF (posRueckzugE6POS[iMyActPosNo].x == 0) AND (posRueckzugE6POS[iMyActPosNo].y == 0) AND (posRueckzugE6POS[iMyActPosNo].z == 0) AND (posRueckzugE6POS[iMyActPosNo].a == 0) AND (posRueckzugE6POS[iMyActPosNo].b == 0) AND (posRueckzugE6POS[iMyActPosNo].c == 0) THEN
      ErrorHandler(30,#STOERUNG)
    ENDIF
    SWITCH iMoveTyp[iMyActPosNo + iMyRichtung]
    CASE ciMoveLIN
      LIN posRueckzugE6POS[iMyActPosNo]
    CASE ciMovePTP
      PTP posRueckzugE6POS[iMyActPosNo]
    DEFAULT
      PTP posRueckzugE6POS[iMyActPosNo]
    ENDSWITCH
    ;***********************************************
  ENDIF

  ;*************************************************
  ; Set next position
  WAIT SEC 0
  iActPosNo = iNextPosNo[iMyActPosNo]
  iMyActPosNo = iActPosNo - iMyBereich
  ;*************************************************

UNTIL $IN_HOME OR $IN_HOME1

ZurGrundstFahren_A50=FALSE

;***************************************************
; Disable collision detection
;FOLD COLLDETECT Off ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.colldetect.off; CollDetect.Command=Off
;ENDFOLD
USE_CD_PARAMS(0)
;ENDFOLD
;***************************************************

AnfStoer_Store1_1_A99=RESET_REQUEST
AnfStoer_Store1_2_A100=RESET_REQUEST
AnfStoer_Store1_3_A101=RESET_REQUEST
AnfStoer_Store1_4_A102=RESET_REQUEST
AnfStoer_Store1_5_A103=RESET_REQUEST
AnfStoer_Store1_6_A104=RESET_REQUEST
AnfStoer_Store1_7_A105=RESET_REQUEST
AnfStoer_Store1_8_A106=RESET_REQUEST

RobAusStorage1_1_A67=RESET_IN_AREA
RobAusStorage1_2_A68=RESET_IN_AREA
RobAusStorage1_3_A69=RESET_IN_AREA
RobAusStorage1_4_A70=RESET_IN_AREA
RobAusStorage1_5_A71=RESET_IN_AREA
RobAusStorage1_6_A72=RESET_IN_AREA
RobAusStorage1_7_A73=RESET_IN_AREA
RobAusStorage1_8_A74=RESET_IN_AREA

$CYCFLAG[ciFreigabeSPS]=DISABLE_MONITORING

WAIT SEC 0

END ; UP_Rueckzug_R1Place( )
